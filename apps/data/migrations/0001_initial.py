# Generated by Django 4.2.23 on 2025-06-29 05:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16)),
                ('AccountType', models.CharField(max_length=20, null=True)),
                ('CodeLongDesc', models.CharField(max_length=160, null=True)),
                ('CodeShortDesc', models.CharField(max_length=64, null=True)),
                ('EngAccountCodeShortDesc', models.CharField(max_length=64, null=True)),
                ('EngAccountCodeLongDesc', models.CharField(max_length=160, null=True)),
                ('DebitCreditIndicator', models.BooleanField(null=True)),
                ('AccountActive', models.BooleanField(null=True)),
                ('AnalysisAttribute', models.BooleanField(default=False, null=True)),
                ('StandardAccount', models.BooleanField(default=False, null=True)),
                ('ConsolidationAccount', models.BooleanField(default=False, null=True)),
                ('IntercompanyAccount', models.BooleanField(default=False, null=True)),
                ('PostingStatus', models.BooleanField(null=True)),
                ('SystemAccount', models.BooleanField(default=False, null=True)),
                ('BudgetControl', models.BooleanField(default=False, null=True)),
                ('ValidCcCombo', models.CharField(default='All', max_length=16, null=True)),
                ('UseForeignCurrency', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AAccountHierarchy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='AAccountHierarchyDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReportOrder', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='AAccountingPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AccountingPeriodNumber', models.IntegerField(default=0)),
                ('Desc', models.CharField(max_length=64)),
                ('PeriodStartDate', models.DateTimeField()),
                ('PeriodEndDate', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AAccountingSystemParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NumberOfAccountingPeriods', models.IntegerField(default=0, null=True)),
                ('ActualsDataRetention', models.IntegerField(default=0, null=True)),
                ('BudgetDataRetention', models.IntegerField(default=0, null=True)),
                ('NumberFwdPostingPeriods', models.IntegerField(default=0, null=True)),
                ('RecipientGiftStatementTxt', models.CharField(max_length=264, null=True)),
                ('RecipientGiftStatementTx2', models.CharField(max_length=264, null=True)),
                ('DonorGiftStatementTxt', models.CharField(max_length=264, null=True)),
                ('DonorGiftStatementTx2', models.CharField(max_length=264, null=True)),
                ('HosaStatementTxt', models.CharField(max_length=264, null=True)),
                ('HosaStatementTx2', models.CharField(max_length=264, null=True)),
                ('HosaStatementTx3', models.CharField(max_length=264, null=True)),
                ('HosaStatementTx4', models.CharField(max_length=264, null=True)),
                ('DonorReceiptTxt', models.CharField(max_length=64, null=True)),
                ('StewardshipReportTxt', models.CharField(max_length=264, null=True)),
                ('StewardshipReportTx2', models.CharField(max_length=264, null=True)),
                ('DonorYearlyReceiptTxt', models.CharField(max_length=64, null=True)),
                ('GiftDataRetention', models.IntegerField(default=2, null=True)),
                ('DeceasedAddressText', models.CharField(max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AAccountProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PropertyValue', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AAccountPropertyCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PropertyCode', models.CharField(max_length=40, unique=True)),
                ('Description', models.CharField(max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AAnalysisAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Active', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AAnalysisStoreTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StoreName', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AAnalysisType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16)),
                ('AnalysisTypeDescription', models.CharField(max_length=64)),
                ('AnalysisMode', models.BooleanField()),
                ('AnalysisStore', models.CharField(max_length=64, null=True)),
                ('AnalysisElement', models.CharField(max_length=64, null=True)),
                ('SystemAnalysisType', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AApAnalAttrib',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AApDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ApNumber', models.IntegerField()),
                ('CreditNote', models.BooleanField(default=False)),
                ('DocumentCode', models.CharField(max_length=30, null=True)),
                ('Reference', models.CharField(max_length=100, null=True)),
                ('DateIssued', models.DateTimeField()),
                ('DateEntered', models.DateTimeField()),
                ('CreditTerms', models.IntegerField(default=0, null=True)),
                ('TotalAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('CurrencyCode', models.CharField(max_length=16)),
                ('ExchangeRateToBase', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('DiscountPercentage', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('DiscountDays', models.IntegerField(null=True)),
                ('LastDetailNumber', models.IntegerField(default=0)),
                ('DocumentStatus', models.CharField(max_length=16, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AApDocumentDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DetailNumber', models.IntegerField()),
                ('DetailApproved', models.BooleanField(default=False)),
                ('ItemRef', models.CharField(max_length=100, null=True)),
                ('Narrative', models.CharField(max_length=200, null=True)),
                ('Amount', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('ApprovalDate', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AApDocumentPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Amount', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AApPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PaymentNumber', models.IntegerField(default=0)),
                ('Amount', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('CurrencyCode', models.CharField(max_length=16)),
                ('ExchangeRateToBase', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('PaymentDate', models.DateTimeField(null=True)),
                ('MethodOfPayment', models.CharField(max_length=20, null=True)),
                ('Reference', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AApSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PreferredScreenDisplay', models.IntegerField(null=True)),
                ('DefaultBankAccount', models.CharField(max_length=16, null=True)),
                ('PaymentType', models.CharField(max_length=24, null=True)),
                ('DefaultApAccount', models.CharField(max_length=16, null=True)),
                ('DefaultCreditTerms', models.IntegerField(null=True)),
                ('DefaultDiscountPercentage', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('DefaultDiscountDays', models.IntegerField(null=True)),
                ('SupplierType', models.CharField(max_length=24, null=True)),
                ('DefaultExpAccount', models.CharField(max_length=16, null=True)),
                ('DefaultCostCentre', models.CharField(max_length=16, null=True)),
                ('OurReference', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AArArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=100, unique=True)),
                ('ArSpecificArticle', models.BooleanField(null=True)),
                ('ArDescription', models.CharField(max_length=300, null=True)),
                ('ArLocalDescription', models.CharField(max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AArArticlePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ArDateValidFrom', models.DateTimeField()),
                ('ArAmount', models.DecimalField(decimal_places=10, max_digits=24)),
            ],
        ),
        migrations.CreateModel(
            name='AArCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=100, unique=True)),
                ('ArDescription', models.CharField(max_length=300, null=True)),
                ('ArLocalDescription', models.CharField(max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AArDefaultDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ArDiscountDateValidFrom', models.DateTimeField()),
                ('ArDateValidTo', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AArDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=100)),
                ('ArDateValidFrom', models.DateTimeField()),
                ('ArAdhoc', models.BooleanField(default=False, null=True)),
                ('Active', models.BooleanField(default=True, null=True)),
                ('ArDiscountPercentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, null=True)),
                ('ArDiscountAbsolute', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('ArAbsoluteAmount', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('ArNumberOfItems', models.IntegerField(null=True)),
                ('ArMinimumNumberOfItems', models.IntegerField(null=True)),
                ('ArNumberOfNights', models.IntegerField(null=True)),
                ('ArMinimumNumberOfNights', models.IntegerField(null=True)),
                ('ArWholeRoom', models.BooleanField(null=True)),
                ('ArChildren', models.BooleanField(null=True)),
                ('ArEarlyBookingDays', models.IntegerField(null=True)),
                ('ArEarlyPaymentDays', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AArDiscountPerCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AArInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Key', models.IntegerField()),
                ('Status', models.CharField(max_length=32)),
                ('DateEffective', models.DateTimeField(null=True)),
                ('Offer', models.IntegerField(null=True)),
                ('Taxing', models.CharField(default='DEFAULT', max_length=20)),
                ('TotalAmount', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AArInvoiceDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DetailNumber', models.IntegerField()),
                ('ArReference', models.CharField(max_length=100, null=True)),
                ('ArNumberOfItem', models.IntegerField()),
                ('CalculatedAmount', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AArInvoiceDetailDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AArInvoiceDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ABatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BatchNumber', models.IntegerField(default=0)),
                ('BatchDescription', models.CharField(max_length=160, null=True)),
                ('BatchControlTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('BatchRunningTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('BatchDebitTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('BatchCreditTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('BatchPeriod', models.IntegerField(default=0)),
                ('BatchYear', models.IntegerField(default=0, null=True)),
                ('DateEffective', models.DateTimeField()),
                ('DateOfEntry', models.DateTimeField()),
                ('BatchStatus', models.CharField(default='Unposted', max_length=24, null=True)),
                ('LastJournal', models.IntegerField(default=0)),
                ('GiftBatchNumber', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ABudget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BudgetSequence', models.IntegerField(unique=True)),
                ('BudgetStatus', models.BooleanField(null=True)),
                ('Comment', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ABudgetPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PeriodNumber', models.IntegerField(default=0)),
                ('BudgetBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ABudgetRevision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Year', models.IntegerField()),
                ('Revision', models.IntegerField(default=0)),
                ('Description', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ABudgetType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16, unique=True)),
                ('BudgetTypeDescription', models.CharField(max_length=64)),
                ('BudgetProcessToCall', models.CharField(max_length=22, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ACorporateExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateEffectiveFrom', models.DateTimeField()),
                ('RateOfExchange', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('TimeEffectiveFrom', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ACostCentre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=24)),
                ('CostCentreToReportTo', models.CharField(max_length=24, null=True)),
                ('Name', models.CharField(max_length=64)),
                ('PostingCostCentre', models.BooleanField()),
                ('CostCentreActive', models.BooleanField(default=True, null=True)),
                ('ProjectStatus', models.BooleanField(default=False, null=True)),
                ('ProjectConstraintDate', models.DateTimeField(null=True)),
                ('ProjectConstraintAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('SystemCostCentre', models.BooleanField(default=False, null=True)),
                ('ClearingAccount', models.CharField(default='8500', max_length=24, null=True)),
                ('RetEarningsAccountCode', models.CharField(default='9700', max_length=24, null=True)),
                ('RollupStyle', models.CharField(default='Always', max_length=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ACostCentreType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CostCentreType', models.CharField(default='Local', max_length=16)),
                ('CcDescription', models.CharField(max_length=60, null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ACrdtNoteInvoiceLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AppliedDate', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ACurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16, unique=True)),
                ('Name', models.CharField(max_length=64)),
                ('CurrencySymbol', models.CharField(max_length=8)),
                ('DisplayFormat', models.CharField(default='->>>,>>>,>>>,>>9.99', max_length=40)),
                ('InEmu', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ACurrencyLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UnitLabelSingular', models.CharField(max_length=32, null=True)),
                ('UnitLabelPlural', models.CharField(max_length=32, null=True)),
                ('SpecialCode', models.CharField(max_length=32, null=True)),
                ('DecimalOptions', models.CharField(max_length=24, null=True)),
                ('DecimalLabelSingular', models.CharField(max_length=32, null=True)),
                ('DecimalLabelPlural', models.CharField(max_length=32, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ADailyExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateEffectiveFrom', models.DateTimeField()),
                ('TimeEffectiveFrom', models.IntegerField(default=0)),
                ('RateOfExchange', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
            ],
        ),
        migrations.CreateModel(
            name='AEmailDestination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FileCode', models.CharField(max_length=40)),
                ('ConditionalValue', models.CharField(max_length=40)),
                ('EmailAddress', models.CharField(max_length=636, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AEpAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ImportfilePath', models.CharField(max_length=200, null=True)),
                ('ExportfilePath', models.CharField(max_length=200, null=True)),
                ('PluginFilename', models.CharField(max_length=200, null=True)),
                ('PluginParameters', models.CharField(max_length=500, null=True)),
                ('ConfidentialGift', models.BooleanField(null=True)),
                ('TaxDeductible', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AEpDocumentPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Amount', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AEpMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EpMatchKey', models.IntegerField(unique=True)),
                ('MatchText', models.CharField(max_length=200)),
                ('Detail', models.IntegerField(default=0)),
                ('Action', models.CharField(max_length=40)),
                ('RecentMatch', models.DateTimeField()),
                ('CommentOneType', models.CharField(max_length=24, null=True)),
                ('GiftCommentOne', models.CharField(max_length=160, null=True)),
                ('ConfidentialGift', models.BooleanField()),
                ('TaxDeductible', models.BooleanField(default=True, null=True)),
                ('Charge', models.BooleanField(default=True, null=True)),
                ('CommentTwoType', models.CharField(max_length=24, null=True)),
                ('GiftCommentTwo', models.CharField(max_length=160, null=True)),
                ('CommentThreeType', models.CharField(max_length=24, null=True)),
                ('GiftCommentThree', models.CharField(max_length=160, null=True)),
                ('GiftTransactionAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('HomeAdminCharges', models.BooleanField()),
                ('IltAdminCharges', models.BooleanField()),
                ('ReceiptLetterCode', models.CharField(max_length=20, null=True)),
                ('AdminCharge', models.BooleanField(default=False, null=True)),
                ('Narrative', models.CharField(max_length=240, null=True)),
                ('Reference', models.CharField(max_length=20, null=True)),
                ('DonorShortName', models.CharField(max_length=500, null=True)),
                ('RecipientShortName', models.CharField(max_length=500, null=True)),
                ('Restricted', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AEpPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PaymentNumber', models.IntegerField(default=0)),
                ('Amount', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('Reference', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AEpStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatementKey', models.IntegerField(unique=True)),
                ('Date', models.DateTimeField()),
                ('IdFromBank', models.CharField(max_length=40, null=True)),
                ('Filename', models.CharField(max_length=40, null=True)),
                ('StartBalance', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('EndBalance', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AEpTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Order', models.IntegerField()),
                ('DetailKey', models.IntegerField(default=-1)),
                ('NumberOnPaperStatement', models.IntegerField(default=-1, null=True)),
                ('MatchText', models.CharField(max_length=200, null=True)),
                ('AccountName', models.CharField(max_length=160, null=True)),
                ('Title', models.CharField(max_length=64, null=True)),
                ('FirstName', models.CharField(max_length=64, null=True)),
                ('MiddleName', models.CharField(max_length=64, null=True)),
                ('LastName', models.CharField(max_length=64, null=True)),
                ('BranchCode', models.CharField(max_length=20, null=True)),
                ('Bic', models.CharField(max_length=22, null=True)),
                ('BankAccountNumber', models.CharField(max_length=40, null=True)),
                ('Iban', models.CharField(max_length=128, null=True)),
                ('TransactionTypeCode', models.CharField(max_length=40, null=True)),
                ('TransactionAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('Description', models.CharField(max_length=512, null=True)),
                ('DateEffective', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='AFeesPayable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FeeCode', models.CharField(max_length=16)),
                ('ChargeOption', models.CharField(max_length=40)),
                ('ChargePercentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, null=True)),
                ('ChargeAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('FeeDescription', models.CharField(max_length=48, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AFeesReceivable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FeeCode', models.CharField(max_length=16)),
                ('ChargeOption', models.CharField(max_length=40)),
                ('ChargePercentage', models.DecimalField(decimal_places=2, default=0, max_digits=5, null=True)),
                ('ChargeAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('FeeDescription', models.CharField(max_length=48, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=20)),
                ('Name', models.CharField(max_length=20)),
                ('FormDescription', models.CharField(max_length=100, null=True)),
                ('FileName', models.TextField(max_length=2000, null=True)),
                ('TypeCode', models.CharField(max_length=24)),
                ('NumberOfDetails', models.IntegerField(default=0, null=True)),
                ('PrintInBold', models.BooleanField(default=False)),
                ('LinesOnPage', models.IntegerField(default=66)),
                ('MinimumAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('Options', models.CharField(max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AFormElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FormSequence', models.IntegerField(default=0)),
                ('Column', models.IntegerField(default=1)),
                ('Row', models.IntegerField(default=1)),
                ('Length', models.IntegerField(default=1)),
                ('Skip', models.IntegerField(default=0, null=True)),
                ('WhenPrint', models.CharField(max_length=40)),
                ('LiteralText', models.CharField(max_length=264, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AFormElementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FormCode', models.CharField(max_length=20)),
                ('Code', models.CharField(max_length=40)),
                ('Desc', models.CharField(max_length=160, null=True)),
                ('DefaultLength', models.IntegerField(default=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AFreeformAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AnalysisValue', models.CharField(max_length=160)),
                ('Active', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AFrequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=24, unique=True)),
                ('FrequencyDescription', models.CharField(max_length=64)),
                ('NumberOfYears', models.IntegerField(default=0)),
                ('NumberOfMonths', models.IntegerField(default=0, null=True)),
                ('NumberOfDays', models.IntegerField(default=0, null=True)),
                ('NumberOfHours', models.IntegerField(default=0, null=True)),
                ('NumberOfMinutes', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AGeneralLedgerMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GlmSequence', models.IntegerField(unique=True)),
                ('Year', models.IntegerField()),
                ('YtdActualBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ClosingPeriodActualBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('StartBalanceBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('YtdActualIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ClosingPeriodActualIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('StartBalanceIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('YtdActualForeign', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('StartBalanceForeign', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AGeneralLedgerMasterPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PeriodNumber', models.IntegerField()),
                ('ActualBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('BudgetBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ActualIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('BudgetIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ActualForeign', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AGift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GiftTransactionNumber', models.IntegerField(default=0)),
                ('GiftStatus', models.CharField(max_length=24, null=True)),
                ('DateEntered', models.DateTimeField()),
                ('HomeAdminCharges', models.BooleanField()),
                ('IltAdminCharges', models.BooleanField()),
                ('LinkToPreviousGift', models.BooleanField(default=False)),
                ('PrintReceipt', models.BooleanField(default=True)),
                ('ReceiptLetterCode', models.CharField(max_length=16, null=True)),
                ('AdminCharge', models.BooleanField(default=False, null=True)),
                ('ReceiptNumber', models.IntegerField(default=0, null=True)),
                ('LastDetailNumber', models.IntegerField(default=0)),
                ('Reference', models.CharField(max_length=20, null=True)),
                ('FirstTimeGift', models.BooleanField(default=False, null=True)),
                ('ReceiptPrinted', models.BooleanField(default=False)),
                ('Restricted', models.BooleanField(default=False, null=True)),
                ('BankingDetailsKey', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='AGiftBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BatchNumber', models.IntegerField(default=0)),
                ('BatchDescription', models.CharField(max_length=80)),
                ('ModificationDate', models.DateTimeField(null=True)),
                ('HashTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('BatchTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('LastGiftNumber', models.IntegerField(default=0, null=True)),
                ('BatchStatus', models.CharField(default='Unposted', max_length=16, null=True)),
                ('BatchPeriod', models.IntegerField(default=0)),
                ('BatchYear', models.IntegerField()),
                ('GlEffectiveDate', models.DateTimeField()),
                ('ExchangeRateToBase', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('GiftType', models.CharField(default='Gift', max_length=16)),
                ('MethodOfPaymentCode', models.CharField(max_length=16, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AGiftDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DetailNumber', models.IntegerField(default=0)),
                ('GiftAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('CommentOneType', models.CharField(max_length=24, null=True)),
                ('GiftCommentOne', models.CharField(max_length=160, null=True)),
                ('ConfidentialGift', models.BooleanField()),
                ('TaxDeductible', models.BooleanField(default=True, null=True)),
                ('Charge', models.BooleanField(default=True, null=True)),
                ('GiftAmountIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ModifiedDetail', models.BooleanField(default=False, null=True)),
                ('ModifiedDetailKey', models.CharField(max_length=48, null=True)),
                ('FixedGiftDestination', models.BooleanField(default=False, null=True)),
                ('GiftTransactionAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('IchNumber', models.IntegerField(default=0)),
                ('CommentTwoType', models.CharField(max_length=24, null=True)),
                ('GiftCommentTwo', models.CharField(max_length=160, null=True)),
                ('CommentThreeType', models.CharField(max_length=24, null=True)),
                ('GiftCommentThree', models.CharField(max_length=160, null=True)),
                ('TaxDeductiblePct', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('TaxDeductibleAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('TaxDeductibleAmountBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('TaxDeductibleAmountIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('NonDeductibleAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('NonDeductibleAmountBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('NonDeductibleAmountIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AIchStewardship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IchNumber', models.IntegerField(default=0)),
                ('Year', models.IntegerField(default=0)),
                ('DateProcessed', models.DateTimeField()),
                ('IncomeAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ExpenseAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('DirectXferAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('IncomeAmountIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ExpenseAmountIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('DirectXferAmountIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AJournal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('JournalNumber', models.IntegerField()),
                ('JournalDescription', models.CharField(max_length=160)),
                ('JournalDebitTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('JournalCreditTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('JournalPeriod', models.IntegerField(default=0)),
                ('DateEffective', models.DateTimeField()),
                ('LastTransactionNumber', models.IntegerField(default=0)),
                ('JournalStatus', models.CharField(default='Unposted', max_length=24, null=True)),
                ('ExchangeRateToBase', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('ExchangeRateTime', models.IntegerField(default=0)),
                ('DateOfEntry', models.DateTimeField()),
                ('Reversed', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ALedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LedgerNumber', models.IntegerField(default=0, unique=True)),
                ('Name', models.CharField(max_length=64, null=True)),
                ('LedgerStatus', models.BooleanField()),
                ('LastBatchNumber', models.IntegerField(default=0)),
                ('LastRecurringBatchNumber', models.IntegerField(default=0)),
                ('LastGiftNumber', models.IntegerField(default=0)),
                ('LastApInvNumber', models.IntegerField(default=0)),
                ('LastHeaderRNumber', models.IntegerField(default=0)),
                ('LastPoNumber', models.IntegerField(default=0)),
                ('LastSoNumber', models.IntegerField(default=0)),
                ('MaxGiftAidAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('MinGiftAidAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('NumberOfGiftsToDisplay', models.IntegerField(default=0)),
                ('IltGlAccountCode', models.CharField(max_length=16, null=True)),
                ('ProfitLossGlAccountCode', models.CharField(max_length=16, null=True)),
                ('NumberOfAccountingPeriods', models.IntegerField(default=0)),
                ('TransactionAccount', models.BooleanField(default=False)),
                ('YearEnd', models.BooleanField(default=False)),
                ('ForexGainsLossesAccount', models.CharField(max_length=16)),
                ('SystemInterface', models.BooleanField(default=False)),
                ('SuspenseAccount', models.BooleanField(default=False)),
                ('BankAccounts', models.BooleanField(default=False)),
                ('DeleteLedger', models.BooleanField(default=False)),
                ('NewFinancialYear', models.BooleanField(default=False)),
                ('RecalculateGlMaster', models.BooleanField(default=False)),
                ('InstallationId', models.CharField(max_length=16, null=True)),
                ('BudgetControl', models.BooleanField(default=False, null=True)),
                ('BudgetDataRetention', models.IntegerField(default=0, null=True)),
                ('CostOfSalesGlAccount', models.CharField(max_length=16, null=True)),
                ('CreditorGlAccountCode', models.CharField(max_length=16, null=True)),
                ('CurrentFinancialYear', models.IntegerField(default=0, null=True)),
                ('CurrentPeriod', models.IntegerField(default=0, null=True)),
                ('DateCrDrBalances', models.DateTimeField(null=True)),
                ('DebtorGlAccountCode', models.CharField(max_length=16, null=True)),
                ('FaDepreciationGlAccount', models.CharField(max_length=16, null=True)),
                ('FaGlAccountCode', models.CharField(max_length=16, null=True)),
                ('FaPlOnSaleGlAccount', models.CharField(max_length=16, null=True)),
                ('FaProvForDepnGlAccount', models.CharField(max_length=16, null=True)),
                ('IltAccount', models.BooleanField(default=False, null=True)),
                ('LastApDnNumber', models.IntegerField(default=0, null=True)),
                ('LastPoRetNumber', models.IntegerField(default=0, null=True)),
                ('LastSoDelNumber', models.IntegerField(default=0, null=True)),
                ('LastSoRetNumber', models.IntegerField(default=0, null=True)),
                ('LastSpecialGiftNumber', models.IntegerField(default=0, null=True)),
                ('NumberFwdPostingPeriods', models.IntegerField(default=0, null=True)),
                ('DiscountAllowedPct', models.DecimalField(decimal_places=2, default=0, max_digits=5, null=True)),
                ('DiscountReceivedPct', models.DecimalField(decimal_places=2, default=0, max_digits=5, null=True)),
                ('PoAccrualGlAccountCode', models.CharField(max_length=16, null=True)),
                ('ProvisionalYearEnd', models.BooleanField(default=False, null=True)),
                ('PurchaseGlAccountCode', models.CharField(max_length=16, null=True)),
                ('RetEarningsGlAccount', models.CharField(max_length=16, null=True)),
                ('SalesGlAccountCode', models.CharField(max_length=16, null=True)),
                ('SoAccrualGlAccountCode', models.CharField(max_length=16, null=True)),
                ('StockAccrualGlAccount', models.CharField(max_length=16, null=True)),
                ('StockAdjGlAccountCode', models.CharField(max_length=16, null=True)),
                ('StockGlAccountCode', models.CharField(max_length=16, null=True)),
                ('TaxExclIncl', models.BooleanField(null=True)),
                ('TaxExclInclIndicator', models.BooleanField(default=False, null=True)),
                ('TaxInputGlAccountCode', models.CharField(max_length=16, null=True)),
                ('TaxInputGlCcCode', models.CharField(max_length=16, null=True)),
                ('TaxOutputGlAccountCode', models.CharField(max_length=16, null=True)),
                ('TermsOfPaymentCode', models.CharField(max_length=16, null=True)),
                ('LastPoRecNumber', models.IntegerField(default=0, null=True)),
                ('TaxGlAccountNumber', models.IntegerField(default=0, null=True)),
                ('ActualsDataRetention', models.IntegerField(default=11, null=True)),
                ('PartnerKey', models.IntegerField(default=0, null=True)),
                ('CalendarMode', models.BooleanField(null=True)),
                ('YearEndProcessStatus', models.IntegerField(default=0, null=True)),
                ('LastHeaderPNumber', models.IntegerField(default=0)),
                ('IltProcessingCentre', models.BooleanField(default=False, null=True)),
                ('LastGiftBatchNumber', models.IntegerField(default=0, null=True)),
                ('LastRecGiftBatchNumber', models.IntegerField(default=0, null=True)),
                ('GiftDataRetention', models.IntegerField(default=2, null=True)),
                ('RecalculateAllPeriods', models.BooleanField(default=False, null=True)),
                ('LastIchNumber', models.IntegerField(default=0)),
                ('ConsolidationLedger', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ALedgerInitFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InitOptionName', models.CharField(max_length=64)),
                ('Value', models.CharField(default='IsSet', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='AMethodOfGiving',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=24, unique=True)),
                ('Desc', models.CharField(max_length=64)),
                ('Trust', models.BooleanField(default=False)),
                ('TaxRebate', models.BooleanField(default=False)),
                ('RecurringMethod', models.BooleanField(default=False)),
                ('Active', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AMethodOfPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16, unique=True)),
                ('Desc', models.CharField(max_length=64)),
                ('MethodOfPaymentType', models.CharField(max_length=16, null=True)),
                ('ProcessToCall', models.CharField(max_length=24, null=True)),
                ('SpecialMethodOfPmt', models.BooleanField(default=False)),
                ('Active', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AMotivationDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16)),
                ('MotivationDetailAudience', models.CharField(max_length=160, null=True)),
                ('Desc', models.CharField(max_length=160)),
                ('MotivationStatus', models.BooleanField()),
                ('MailingCost', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('BulkRate', models.BooleanField(default=False)),
                ('NextResponseStatus', models.CharField(max_length=24, null=True)),
                ('ActivatePartner', models.BooleanField(default=False)),
                ('NumberSent', models.IntegerField(default=0, null=True)),
                ('NumberOfResponses', models.IntegerField(default=0, null=True)),
                ('TargetNumberOfResponses', models.IntegerField(default=0, null=True)),
                ('TargetAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('AmountReceived', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('Autopopdesc', models.BooleanField(default=False, null=True)),
                ('Receipt', models.BooleanField(default=True, null=True)),
                ('DontReport', models.BooleanField(default=False, null=True)),
                ('TaxDeductible', models.BooleanField(default=True, null=True)),
                ('MotivationDetailDescLocal', models.CharField(max_length=160, null=True)),
                ('ShortCode', models.CharField(max_length=8, null=True)),
                ('Restricted', models.BooleanField(default=False, null=True)),
                ('ExportToIntranet', models.BooleanField(default=True, null=True)),
                ('ReportColumn', models.CharField(max_length=40, null=True)),
                ('Sponsorship', models.BooleanField(default=False)),
                ('Membership', models.BooleanField(default=False)),
                ('WorkerSupport', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='AMotivationDetailFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FeeCode', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='AMotivationGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16)),
                ('MotivationGroupDescription', models.CharField(max_length=100)),
                ('GroupStatus', models.BooleanField()),
                ('MotivationGroupDescLocal', models.CharField(max_length=100, null=True)),
                ('Restricted', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AProcessedFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FeeCode', models.CharField(max_length=16)),
                ('PeriodicAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('ProcessedDate', models.DateTimeField(null=True)),
                ('Timestamp', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ARecurringBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BatchNumber', models.IntegerField(default=0)),
                ('BatchDescription', models.CharField(max_length=160, null=True)),
                ('BatchControlTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('BatchStatus', models.CharField(default='Unposted', max_length=24)),
                ('BatchRunningTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('BatchDebitTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('BatchCreditTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('BatchPeriod', models.IntegerField(default=0, null=True)),
                ('DateEffective', models.DateTimeField()),
                ('DateOfEntry', models.DateTimeField(null=True)),
                ('DateBatchLastRun', models.DateTimeField(null=True)),
                ('LastJournal', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ARecurringGift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GiftTransactionNumber', models.IntegerField(default=0)),
                ('ReceiptLetterCode', models.CharField(max_length=16, null=True)),
                ('LastDetailNumber', models.IntegerField(default=0)),
                ('Reference', models.CharField(max_length=16, null=True)),
                ('BankingDetailsKey', models.IntegerField(default=0)),
                ('SepaMandateReference', models.CharField(max_length=70, null=True)),
                ('SepaMandateGiven', models.DateTimeField(null=True)),
                ('ChargeStatus', models.CharField(max_length=20, null=True)),
                ('LastDebit', models.DateTimeField(null=True)),
                ('DebitDay', models.IntegerField(default=0, null=True)),
                ('Active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ARecurringGiftBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BatchNumber', models.IntegerField(default=0)),
                ('BatchDescription', models.CharField(max_length=80, null=True)),
                ('HashTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('BatchTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('LastGiftNumber', models.IntegerField(default=0, null=True)),
                ('GiftType', models.CharField(default='Gift', max_length=16)),
                ('MethodOfPaymentCode', models.CharField(max_length=16, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ARecurringGiftDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DetailNumber', models.IntegerField(default=0)),
                ('GiftAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('CommentOneType', models.CharField(max_length=24, null=True)),
                ('GiftCommentOne', models.CharField(max_length=160, null=True)),
                ('ConfidentialGift', models.BooleanField()),
                ('TaxDeductible', models.BooleanField(default=True, null=True)),
                ('Charge', models.BooleanField(default=True, null=True)),
                ('CommentTwoType', models.CharField(max_length=24, null=True)),
                ('GiftCommentTwo', models.CharField(max_length=160, null=True)),
                ('CommentThreeType', models.CharField(max_length=24, null=True)),
                ('GiftCommentThree', models.CharField(max_length=160, null=True)),
                ('StartDonations', models.DateTimeField(null=True)),
                ('EndDonations', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ARecurringJournal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('JournalNumber', models.IntegerField(default=0)),
                ('JournalDescription', models.CharField(max_length=160)),
                ('JournalStatus', models.CharField(default='Unposted', max_length=40)),
                ('JournalDebitTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('JournalCreditTotal', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('JournalPeriod', models.IntegerField(default=0, null=True)),
                ('DateEffective', models.DateTimeField()),
                ('LastTransactionNumber', models.IntegerField(default=0)),
                ('ExchangeRateToBase', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
            ],
        ),
        migrations.CreateModel(
            name='ARecurringTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TransactionNumber', models.IntegerField(default=0)),
                ('TransactionDate', models.DateTimeField()),
                ('TransactionAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('ExchangeRateToBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('AmountInBaseCurrency', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('AnalysisIndicator', models.BooleanField(default=False)),
                ('PeriodNumber', models.IntegerField(default=0, null=True)),
                ('Reconciled', models.BooleanField(default=False)),
                ('SubSystemCode', models.CharField(max_length=24, null=True)),
                ('TransactionTypeCode', models.CharField(max_length=16, null=True)),
                ('Narrative', models.CharField(max_length=240, null=True)),
                ('Reference', models.CharField(max_length=16)),
                ('DateOfEntry', models.DateTimeField(null=True)),
                ('DebitCreditIndicator', models.BooleanField()),
                ('TransactionStatus', models.BooleanField(default=False, null=True)),
                ('HeaderNumber', models.IntegerField(default=0, null=True)),
                ('DetailNumber', models.IntegerField(default=0, null=True)),
                ('SubType', models.CharField(max_length=16, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ARecurringTransAnalAttrib',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ARevaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('JournalNumber', models.IntegerField()),
                ('RevaluationCurrency', models.CharField(max_length=16)),
                ('ExchangeRateToBase', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
            ],
        ),
        migrations.CreateModel(
            name='ASpecialTransType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TransactionTypeCode', models.CharField(max_length=16)),
                ('TransactionTypeDescription', models.CharField(max_length=64)),
                ('SpecTransProcessToCall', models.CharField(max_length=24)),
                ('SpecTransUndoProcess', models.CharField(max_length=16, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ASubSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=24, unique=True)),
                ('Name', models.CharField(max_length=64)),
                ('SetupSubSystemProcess', models.CharField(max_length=24, null=True)),
                ('SubSystemToCall', models.CharField(max_length=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ASuspenseAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ASystemInterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SetUpComplete', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ATaxTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TaxRateCode', models.CharField(max_length=16)),
                ('TaxValidFrom', models.DateTimeField()),
                ('TaxRateDescription', models.CharField(max_length=64, null=True)),
                ('TaxRate', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('Active', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ATaxType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16, unique=True)),
                ('TaxTypeDescription', models.CharField(max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ATransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TransactionNumber', models.IntegerField(default=0)),
                ('PrimaryAccountCode', models.CharField(max_length=16, null=True)),
                ('PrimaryCostCentreCode', models.CharField(max_length=24, null=True)),
                ('TransactionDate', models.DateTimeField()),
                ('TransactionAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('AmountInBaseCurrency', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('AnalysisIndicator', models.BooleanField(default=False)),
                ('ReconciledStatus', models.BooleanField(default=False)),
                ('Narrative', models.CharField(max_length=500, null=True)),
                ('DebitCreditIndicator', models.BooleanField()),
                ('TransactionStatus', models.BooleanField(null=True)),
                ('HeaderNumber', models.IntegerField(default=0, null=True)),
                ('DetailNumber', models.IntegerField(default=0, null=True)),
                ('SubType', models.CharField(max_length=16, null=True)),
                ('ToIlt', models.BooleanField(default=False, null=True)),
                ('Source', models.BooleanField(default=False, null=True)),
                ('Reference', models.CharField(max_length=100)),
                ('SourceReference', models.CharField(max_length=100, null=True)),
                ('SystemGenerated', models.BooleanField(default=False, null=True)),
                ('AmountInIntlCurrency', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('IchNumber', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ATransactionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16)),
                ('LastJournal', models.IntegerField(default=0)),
                ('LastRecurringJournal', models.IntegerField(default=0)),
                ('TransactionTypeDescription', models.CharField(max_length=64)),
                ('BalancingAccountCode', models.CharField(max_length=24, null=True)),
                ('SpecialTransactionType', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ATransAnalAttrib',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='AValidLedgerNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MExtract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MExtractMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ExtractId', models.IntegerField(default=0, unique=True)),
                ('ExtractName', models.CharField(max_length=50)),
                ('ExtractDesc', models.CharField(max_length=160, null=True)),
                ('LastRef', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True)),
                ('Frozen', models.BooleanField(default=False)),
                ('KeyCount', models.IntegerField(default=0, null=True)),
                ('Public', models.BooleanField(default=True)),
                ('ManualModification', models.BooleanField(default=False)),
                ('ManualModificationDate', models.DateTimeField(null=True)),
                ('Template', models.BooleanField(default=False, null=True)),
                ('Restricted', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MExtractParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ParameterCode', models.CharField(max_length=50)),
                ('ValueIndex', models.IntegerField(default=0)),
                ('ParameterValue', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MExtractType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=50, unique=True)),
                ('Function', models.CharField(max_length=500, null=True)),
                ('Description', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PAcquisition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16, unique=True)),
                ('AcquisitionDescription', models.CharField(max_length=160)),
                ('ValidAcquisition', models.BooleanField(default=True, null=True)),
                ('Deletable', models.BooleanField(default=True)),
                ('RecruitingEffort', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=60)),
                ('Descr', models.CharField(max_length=400, null=True)),
                ('Active', models.BooleanField(null=True)),
                ('SystemAction', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PAddressBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AddressBlockText', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='PAddressBlockElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AddressElementCode', models.CharField(max_length=48, unique=True)),
                ('AddressElementDescription', models.CharField(max_length=160, null=True)),
                ('IsDirective', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='PAddresseeTitleOverride',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=64)),
                ('TitleOverride', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='PAddresseeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=24, unique=True)),
                ('Description', models.CharField(max_length=64)),
                ('Deletable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PAddressElement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=24, unique=True)),
                ('AddressElementDescription', models.CharField(max_length=160, null=True)),
                ('FieldName', models.CharField(max_length=60, null=True)),
                ('AddressElementText', models.CharField(max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PAddressLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AddressLineNumber', models.IntegerField(default=0)),
                ('AddressLineCode', models.CharField(max_length=16)),
                ('AddressPrompt', models.CharField(max_length=30, null=True)),
                ('Locked', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PAddressLayoutCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=32, unique=True)),
                ('Description', models.CharField(max_length=100, null=True)),
                ('DisplayIndex', models.IntegerField()),
                ('Comment', models.CharField(max_length=600, null=True)),
                ('Deletable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PAddressLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16)),
                ('AddressElementPosition', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PBank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BranchName', models.CharField(max_length=160, null=True)),
                ('BranchCode', models.CharField(max_length=20, null=True)),
                ('Bic', models.CharField(max_length=22, null=True)),
                ('EpFormatFile', models.CharField(max_length=96, null=True)),
                ('CreditCard', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PBankingDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('BankingDetailsKey', models.IntegerField(unique=True)),
                ('AccountName', models.CharField(max_length=160, null=True)),
                ('Title', models.CharField(max_length=64, null=True)),
                ('FirstName', models.CharField(max_length=64, null=True)),
                ('MiddleName', models.CharField(max_length=64, null=True)),
                ('LastName', models.CharField(max_length=64, null=True)),
                ('BankAccountNumber', models.CharField(max_length=40, null=True)),
                ('Iban', models.CharField(max_length=128, null=True)),
                ('SecurityCode', models.CharField(max_length=24, null=True)),
                ('ValidFromDate', models.DateTimeField(null=True)),
                ('ExpiryDate', models.DateTimeField(null=True)),
                ('Comment', models.CharField(max_length=510, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PBankingDetailsUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PBankingDetailsUsageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(max_length=32, unique=True)),
                ('TypeDescription', models.CharField(max_length=120)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PBankingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(max_length=24, unique=True)),
                ('OldId', models.IntegerField()),
                ('Description', models.CharField(max_length=50, null=True)),
                ('Check', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PBusiness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16, unique=True)),
                ('BusinessDescription', models.CharField(max_length=80)),
                ('Deletable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcAttendee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OutreachType', models.CharField(max_length=12, null=True)),
                ('ActualArr', models.DateTimeField(null=True)),
                ('ActualDep', models.DateTimeField(null=True)),
                ('BadgePrint', models.DateTimeField(null=True)),
                ('DetailsPrint', models.DateTimeField(null=True)),
                ('Comments', models.TextField(max_length=1000, null=True)),
                ('DiscoveryGroup', models.CharField(max_length=32, null=True)),
                ('WorkGroup', models.CharField(max_length=32, null=True)),
                ('Registered', models.DateTimeField(null=True)),
                ('ArrivalGroup', models.CharField(max_length=40, null=True)),
                ('DepartureGroup', models.CharField(max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcBuilding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16)),
                ('Desc', models.CharField(max_length=160, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcConference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OutreachPrefix', models.CharField(max_length=10, null=True)),
                ('Start', models.DateTimeField(null=True)),
                ('End', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcConferenceCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OptionDays', models.IntegerField(default=0)),
                ('Charge', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcConferenceOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OptionSet', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcConferenceOptionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OptionTypeCode', models.CharField(max_length=32, unique=True)),
                ('OptionTypeDescription', models.CharField(max_length=80, null=True)),
                ('OptionTypeComment', models.CharField(max_length=512, null=True)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcConferenceVenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PcCostType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=32, unique=True)),
                ('CostTypeDescription', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcDiscount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Validity', models.CharField(max_length=6)),
                ('UpToAge', models.IntegerField()),
                ('Percentage', models.BooleanField(null=True)),
                ('Discount', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcDiscountCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16, unique=True)),
                ('Desc', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcEarlyLate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Applicable', models.DateTimeField()),
                ('Type', models.BooleanField(null=True)),
                ('AmountPercent', models.BooleanField(null=True)),
                ('Amount', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('Percent', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcExtraCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ExtraCostKey', models.IntegerField(default=0)),
                ('CostAmount', models.DecimalField(decimal_places=10, max_digits=24, null=True)),
                ('Comment', models.CharField(max_length=512, null=True)),
                ('AuthorisingPerson', models.CharField(max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GroupType', models.CharField(max_length=40)),
                ('Name', models.CharField(max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='PChurch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=160, null=True)),
                ('ApproximateSize', models.IntegerField(default=0, null=True)),
                ('Accomodation', models.BooleanField(default=False, null=True)),
                ('PrayerGroup', models.BooleanField(default=False, null=True)),
                ('MapOnFile', models.BooleanField(default=False, null=True)),
                ('AccomodationType', models.CharField(default='OTHER', max_length=16, null=True)),
                ('AccomodationSize', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PConsentChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ChannelCode', models.CharField(max_length=40, unique=True)),
                ('Name', models.CharField(default='0', max_length=128)),
                ('Comment', models.CharField(max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PConsentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EntryId', models.IntegerField(default=0, unique=True)),
                ('Type', models.CharField(max_length=128)),
                ('Value', models.TextField(max_length=1024, null=True)),
                ('ConsentDate', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='PConsentHistoryPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PConsentPurpose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PurposeCode', models.CharField(max_length=40, unique=True)),
                ('Name', models.CharField(default='0', max_length=128)),
                ('Comment', models.CharField(max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PContactAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=32, unique=True)),
                ('Descr', models.CharField(max_length=64, null=True)),
                ('Active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PContactAttributeDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ContactAttrDetailCode', models.CharField(max_length=32)),
                ('ContactAttrDetailDescr', models.CharField(max_length=64, null=True)),
                ('Active', models.BooleanField(default=True)),
                ('Comment', models.TextField(max_length=8000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PContactLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ContactLogId', models.IntegerField(default=0, unique=True)),
                ('ContactDate', models.DateTimeField()),
                ('ContactTime', models.IntegerField(default=0, null=True)),
                ('Contactor', models.CharField(max_length=20, null=True)),
                ('ContactMessageId', models.CharField(max_length=200, null=True)),
                ('ContactComment', models.TextField(max_length=30000, null=True)),
                ('Restricted', models.BooleanField(default=False, null=True)),
                ('ContactLocation', models.TextField(max_length=8000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=8, unique=True)),
                ('Name', models.CharField(max_length=80)),
                ('Undercover', models.BooleanField(default=False, null=True)),
                ('InternatTelephoneCode', models.IntegerField(default=0, null=True)),
                ('InternatAccessCode', models.CharField(max_length=8, null=True)),
                ('TimeZoneMinimum', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('TimeZoneMaximum', models.DecimalField(decimal_places=2, default=0, max_digits=6, null=True)),
                ('Deletable', models.BooleanField(default=True)),
                ('AddressOrder', models.IntegerField(default=0, null=True)),
                ('CountryNameLocal', models.CharField(max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RoomNumber', models.CharField(max_length=16)),
                ('Name', models.CharField(max_length=100, null=True)),
                ('Beds', models.IntegerField(default=0, null=True)),
                ('MaxOccupancy', models.IntegerField(default=0, null=True)),
                ('BedCharge', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('BedCost', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('Usage', models.CharField(max_length=32, null=True)),
                ('GenderPreference', models.CharField(max_length=6, null=True)),
                ('LayoutXpos', models.IntegerField(null=True)),
                ('LayoutYpos', models.IntegerField(null=True)),
                ('LayoutWidth', models.IntegerField(null=True)),
                ('LayoutHeight', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcRoomAlloc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Key', models.IntegerField(unique=True)),
                ('BookWholeRoom', models.BooleanField(default=True)),
                ('NumberOfBeds', models.IntegerField(default=1, null=True)),
                ('NumberOfOverflowBeds', models.IntegerField(default=0, null=True)),
                ('Gender', models.CharField(max_length=40, null=True)),
                ('In', models.DateTimeField()),
                ('Out', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcRoomAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PcRoomAttributeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=40, unique=True)),
                ('Desc', models.CharField(max_length=100, null=True)),
                ('Valid', models.BooleanField(default=True, null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PcSupplement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OutreachType', models.CharField(max_length=12)),
                ('Supplement', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ApplyDiscounts', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PCustomisedGreeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CustomisedGreetingText', models.CharField(max_length=64, null=True)),
                ('CustomisedClosingText', models.CharField(max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PDataLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Key', models.IntegerField(unique=True)),
                ('Text', models.CharField(max_length=100, null=True)),
                ('Group', models.CharField(max_length=100, null=True)),
                ('Description', models.CharField(max_length=400, null=True)),
                ('DataType', models.CharField(max_length=40)),
                ('CharLength', models.IntegerField(null=True)),
                ('NumDecimalPlaces', models.IntegerField(null=True)),
                ('EntryMandatory', models.BooleanField(default=False, null=True)),
                ('Displayed', models.BooleanField(default=True, null=True)),
                ('NotDisplayedFrom', models.DateTimeField(null=True)),
                ('Editable', models.BooleanField(default=True, null=True)),
                ('NotEditableFrom', models.DateTimeField(null=True)),
                ('Restricted', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PDataLabelLookup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ValueCode', models.CharField(max_length=80)),
                ('ValueDesc', models.CharField(max_length=120, null=True)),
                ('Active', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PDataLabelLookupCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CategoryCode', models.CharField(max_length=60, unique=True)),
                ('CategoryDesc', models.CharField(max_length=120, null=True)),
                ('Extendable', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PDataLabelUse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Use', models.CharField(max_length=40)),
                ('Idx1', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PDataLabelValueApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ValueChar', models.TextField(max_length=8192, null=True)),
                ('ValueNum', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ValueCurrency', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ValueInt', models.IntegerField(default=0, null=True)),
                ('ValueBool', models.BooleanField(default=False, null=True)),
                ('ValueDate', models.DateTimeField(null=True)),
                ('ValueTime', models.IntegerField(default=0, null=True)),
                ('ValueLookup', models.CharField(max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PDataLabelValuePartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ValueChar', models.TextField(max_length=8192, null=True)),
                ('ValueNum', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ValueCurrency', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ValueInt', models.IntegerField(default=0, null=True)),
                ('ValueBool', models.BooleanField(default=False, null=True)),
                ('ValueDate', models.DateTimeField(null=True)),
                ('ValueTime', models.IntegerField(default=0, null=True)),
                ('ValueLookup', models.CharField(max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PDenomination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16, unique=True)),
                ('Name', models.CharField(max_length=80)),
                ('ValidDenomination', models.BooleanField(default=True)),
                ('Deletable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EmailAddress', models.CharField(default='first.last@field.om.org', max_length=80, unique=True)),
                ('Description', models.CharField(max_length=160, null=True)),
                ('Valid', models.BooleanField(default=True, null=True)),
                ('Deletable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PFamily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FamilyMembers', models.BooleanField(default=False, null=True)),
                ('Title', models.CharField(max_length=64, null=True)),
                ('FirstName', models.CharField(max_length=96, null=True)),
                ('Name', models.CharField(max_length=120, null=True)),
                ('DifferentSurnames', models.BooleanField(default=False, null=True)),
                ('MaritalStatusSince', models.DateTimeField(null=True)),
                ('MaritalStatusComment', models.CharField(max_length=512, null=True)),
                ('DateOfBirth', models.DateTimeField(null=True)),
                ('Gender', models.CharField(default='Unknown', max_length=16, null=True)),
                ('Photo', models.TextField(default='?', max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PFileInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Key', models.IntegerField(unique=True)),
                ('Path', models.TextField(max_length=4096, null=True)),
                ('FileName', models.TextField(max_length=1024, null=True)),
                ('Name', models.CharField(max_length=160, null=True)),
                ('FileType', models.CharField(max_length=100, null=True)),
                ('Comment', models.TextField(max_length=1000, null=True)),
                ('Restricted', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PFirstContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=60, unique=True)),
                ('Descr', models.CharField(max_length=400, null=True)),
                ('Active', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=20)),
                ('Name', models.CharField(max_length=20)),
                ('FormDescription', models.CharField(max_length=100, null=True)),
                ('TypeCode', models.CharField(max_length=24)),
                ('FormalityLevel', models.IntegerField(default=1)),
                ('TemplateAvailable', models.BooleanField(default=False)),
                ('TemplateDocument', models.TextField(max_length=20, null=True)),
                ('TemplateFileExtension', models.CharField(max_length=16, null=True)),
                ('TemplateUploadDate', models.DateTimeField(null=True)),
                ('TemplateUploadTime', models.IntegerField(null=True)),
                ('MinimumAmount', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('Options', models.CharField(max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PFormality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FormalityLevel', models.IntegerField(default=1)),
                ('SalutationText', models.CharField(max_length=64, null=True)),
                ('Title', models.CharField(max_length=24, null=True)),
                ('ComplimentaryClosingText', models.CharField(max_length=64, null=True)),
                ('PersonalPronoun', models.CharField(max_length=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PFoundation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('KeyContactName', models.CharField(max_length=70, null=True)),
                ('KeyContactTitle', models.CharField(max_length=70, null=True)),
                ('KeyContactEmail', models.CharField(max_length=120, null=True)),
                ('KeyContactPhone', models.CharField(max_length=40, null=True)),
                ('SpecialRequirements', models.CharField(max_length=700, null=True)),
                ('ProposalFormatting', models.CharField(max_length=700, null=True)),
                ('SpecialInstructions', models.CharField(max_length=700, null=True)),
                ('ReviewFrequency', models.CharField(max_length=20, null=True)),
                ('SubmitFrequency', models.CharField(max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PFoundationDeadline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FoundationDeadlineKey', models.IntegerField()),
                ('DeadlineMonth', models.IntegerField(null=True)),
                ('DeadlineDay', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PFoundationProposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FoundationProposalKey', models.IntegerField()),
                ('ProposalNotes', models.CharField(max_length=700, null=True)),
                ('SubmittedDate', models.DateTimeField(null=True)),
                ('AmountRequested', models.DecimalField(decimal_places=2, max_digits=19, null=True)),
                ('AmountApproved', models.DecimalField(decimal_places=2, max_digits=19, null=True)),
                ('AmountGranted', models.DecimalField(decimal_places=2, max_digits=19, null=True)),
                ('DateGranted', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PFoundationProposalDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProposalDetailId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PFoundationProposalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatusCode', models.CharField(max_length=30, unique=True)),
                ('StatusDescription', models.CharField(max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Key', models.IntegerField(unique=True)),
                ('NumberOfAdults', models.IntegerField(default=0, null=True)),
                ('NumberOfChildren', models.IntegerField(default=0, null=True)),
                ('NumberOfBreakfast', models.IntegerField(default=0, null=True)),
                ('NumberOfLunch', models.IntegerField(default=0, null=True)),
                ('NumberOfSupper', models.IntegerField(default=0, null=True)),
                ('NumberOfLinenNeeded', models.IntegerField(default=0, null=True)),
                ('Confirmed', models.DateTimeField(null=True)),
                ('In', models.DateTimeField()),
                ('Out', models.DateTimeField(null=True)),
                ('TimeArrival', models.IntegerField(null=True)),
                ('TimeDeparture', models.IntegerField(null=True)),
                ('Notes', models.TextField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhRoomBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Interest', models.CharField(max_length=20, unique=True)),
                ('Description', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PInterestCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Category', models.CharField(max_length=20, unique=True)),
                ('Description', models.CharField(max_length=100, null=True)),
                ('LevelDescriptions', models.CharField(max_length=512, null=True)),
                ('LevelRangeLow', models.IntegerField(null=True)),
                ('LevelRangeHigh', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PInternationalPostalType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InternatPostalTypeCode', models.CharField(max_length=16, unique=True)),
                ('Description', models.CharField(max_length=64)),
                ('Deletable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16, unique=True)),
                ('GapLines', models.IntegerField(default=0, null=True)),
                ('Height', models.IntegerField(default=0)),
                ('Width', models.IntegerField(default=0)),
                ('GapColumns', models.IntegerField(default=0, null=True)),
                ('LabelsAcross', models.IntegerField(default=0)),
                ('LabelsDown', models.IntegerField(default=0)),
                ('Description', models.CharField(max_length=70)),
                ('StartColumn', models.IntegerField(default=0, null=True)),
                ('StartLine', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=20, unique=True)),
                ('LanguageDescription', models.CharField(max_length=80)),
                ('CongressLanguage', models.BooleanField(default=False, null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SiteKey', models.IntegerField(default=0)),
                ('LocationKey', models.IntegerField(default=0)),
                ('Building1', models.CharField(max_length=100, null=True)),
                ('Building2', models.CharField(max_length=100, null=True)),
                ('StreetName', models.CharField(max_length=100, null=True)),
                ('Locality', models.CharField(max_length=100, null=True)),
                ('Suburb', models.CharField(max_length=100, null=True)),
                ('City', models.CharField(max_length=64, null=True)),
                ('County', models.CharField(max_length=64, null=True)),
                ('PostalCode', models.CharField(max_length=40, null=True)),
                ('Address3', models.CharField(max_length=100, null=True)),
                ('GeoLatitude', models.DecimalField(decimal_places=6, max_digits=9, null=True)),
                ('GeoLongitude', models.DecimalField(decimal_places=6, max_digits=9, null=True)),
                ('GeoKmX', models.IntegerField(null=True)),
                ('GeoKmY', models.IntegerField(null=True)),
                ('GeoAccuracy', models.IntegerField(default=-1, null=True)),
                ('Restricted', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PLocationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=20, unique=True)),
                ('Description', models.CharField(max_length=60)),
                ('Deletable', models.BooleanField(default=True)),
                ('Assignable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PMailing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=50, unique=True)),
                ('MailingDescription', models.CharField(max_length=160, null=True)),
                ('MailingDate', models.DateTimeField(null=True)),
                ('MotivationGroupCode', models.CharField(max_length=16, null=True)),
                ('MotivationDetailCode', models.CharField(max_length=16, null=True)),
                ('MailingCost', models.DecimalField(decimal_places=2, default=0, max_digits=19, null=True)),
                ('MailingAttributedAmount', models.DecimalField(decimal_places=2, default=0, max_digits=19, null=True)),
                ('Viewable', models.BooleanField(default=True, null=True)),
                ('ViewableUntil', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmApplicationFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PmApplicationStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Key', models.IntegerField(unique=True)),
                ('StatusDateEffective', models.DateTimeField(null=True)),
                ('Comment', models.CharField(max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmCommitmentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=40, unique=True)),
                ('Desc', models.CharField(max_length=100, null=True)),
                ('Explanation', models.TextField(max_length=1000, null=True)),
                ('IntranetAccess', models.BooleanField(default=True, null=True)),
                ('DisplayIdx1', models.IntegerField(null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SiteKey', models.IntegerField(default=0)),
                ('Key', models.IntegerField(default=0)),
                ('DocumentId', models.CharField(max_length=60, null=True)),
                ('PlaceOfIssue', models.CharField(max_length=80, null=True)),
                ('DateOfIssue', models.DateTimeField(null=True)),
                ('DateOfStart', models.DateTimeField(null=True)),
                ('DateOfExpiration', models.DateTimeField(null=True)),
                ('DocComment', models.TextField(max_length=1000, null=True)),
                ('AssocDocId', models.CharField(max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmDocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=64, unique=True)),
                ('Description', models.CharField(max_length=100, null=True)),
                ('Extendable', models.BooleanField(default=False, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmDocumentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PmDocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DocCode', models.CharField(max_length=40, unique=True)),
                ('Description', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=20, unique=True)),
                ('MembershipDescription', models.CharField(max_length=80, null=True)),
                ('ValidMembership', models.BooleanField(default=True, null=True)),
                ('MembershipFee', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('MembershipHoursService', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PMergeField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=32)),
                ('MergeFieldPosition', models.IntegerField(default=0, null=True)),
                ('MergeType', models.CharField(max_length=32, null=True)),
                ('MergeParameters', models.CharField(max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PMergeForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=16, unique=True)),
                ('MergeFormDescription', models.CharField(max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PMethodOfContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=16, unique=True)),
                ('Description', models.CharField(max_length=64, null=True)),
                ('ContactType', models.CharField(max_length=16, null=True)),
                ('ValidMethod', models.BooleanField(default=True)),
                ('Deletable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmFormalEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FormalEducationKey', models.IntegerField(unique=True)),
                ('EducationCategory', models.CharField(max_length=60, null=True)),
                ('Degree', models.CharField(max_length=160, null=True)),
                ('YearOfDegree', models.IntegerField(default=99, null=True)),
                ('Institution', models.CharField(max_length=160, null=True)),
                ('Comment', models.TextField(max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmGeneralApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ApplicationKey', models.IntegerField(default=0)),
                ('GenAppDate', models.DateTimeField()),
                ('OldLink', models.CharField(max_length=32)),
                ('GenAppDelete', models.BooleanField(default=False, null=True)),
                ('GenApplicantType', models.CharField(max_length=30)),
                ('Closed', models.BooleanField(default=False, null=True)),
                ('DateClosed', models.DateTimeField(null=True)),
                ('GenApplicationOnHold', models.BooleanField(default=False, null=True)),
                ('GenApplicationHoldReason', models.CharField(max_length=100, null=True)),
                ('GenCancelledApp', models.BooleanField(default=False, null=True)),
                ('GenAppCancelReason', models.CharField(max_length=54, null=True)),
                ('GenAppCancelled', models.DateTimeField(null=True)),
                ('GenAppSrvFldAccept', models.BooleanField(default=False, null=True)),
                ('GenAppRecvgFldAccept', models.DateTimeField(null=True)),
                ('GenAppSendFldAccept', models.BooleanField(default=False, null=True)),
                ('GenAppSendFldAcceptDate', models.DateTimeField(null=True)),
                ('GenAppUpdate', models.DateTimeField(null=True)),
                ('Comment', models.TextField(max_length=2000, null=True)),
                ('RawApplicationData', models.TextField(max_length=30000, null=True)),
                ('LocalPartnerKey', models.IntegerField(null=True)),
                ('ImportedLocalPetra', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmJobAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('JobAssignmentKey', models.IntegerField()),
                ('AssistantTo', models.BooleanField(default=False, null=True)),
                ('CostsChanged', models.BooleanField(default=False, null=True)),
                ('FromDate', models.DateTimeField()),
                ('ToDate', models.DateTimeField(null=True)),
                ('HrdCpyDetailChange', models.BooleanField(default=False, null=True)),
                ('Deleteable', models.BooleanField(default=False, null=True)),
                ('RegistrationOffice', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmPassportDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PassportNumber', models.CharField(max_length=40)),
                ('MainPassport', models.BooleanField(default=False, null=True)),
                ('ActiveFlag', models.CharField(max_length=6, null=True)),
                ('FullPassportName', models.CharField(max_length=80, null=True)),
                ('PassportDob', models.DateTimeField(null=True)),
                ('PlaceOfBirth', models.CharField(max_length=60, null=True)),
                ('DateOfExpiration', models.DateTimeField(null=True)),
                ('PlaceOfIssue', models.CharField(max_length=40, null=True)),
                ('DateOfIssue', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmPastExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SiteKey', models.IntegerField(default=0)),
                ('Key', models.IntegerField()),
                ('StartDate', models.DateTimeField(null=True)),
                ('EndDate', models.DateTimeField(null=True)),
                ('PrevLocation', models.CharField(max_length=60)),
                ('PrevRole', models.CharField(max_length=60, null=True)),
                ('Category', models.CharField(max_length=60, null=True)),
                ('OtherOrganisation', models.CharField(max_length=50, null=True)),
                ('PastExpComments', models.CharField(max_length=640, null=True)),
                ('PrevWorkHere', models.BooleanField(default=False, null=True)),
                ('PrevWork', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmPersonAbility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YearsOfExperience', models.IntegerField(default=99)),
                ('YearsOfExperienceAsOf', models.DateTimeField(null=True)),
                ('BringingInstrument', models.BooleanField(default=False, null=True)),
                ('Comment', models.CharField(max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmPersonAbsence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PersonAbsenceKey', models.IntegerField(unique=True)),
                ('AbsenceFrom', models.DateTimeField(null=True)),
                ('AbsenceTo', models.DateTimeField(null=True)),
                ('AbsenceDays', models.IntegerField(null=True)),
                ('AbsenceType', models.CharField(max_length=60, null=True)),
                ('Comment', models.TextField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmPersonalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('HeightCm', models.IntegerField(null=True)),
                ('WeightKg', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('EyeColour', models.CharField(max_length=40, null=True)),
                ('HairColour', models.CharField(max_length=40, null=True)),
                ('FacialHair', models.CharField(max_length=60, null=True)),
                ('PhysicalDesc', models.CharField(max_length=500, null=True)),
                ('BloodType', models.CharField(max_length=20, null=True)),
                ('EthnicOrigin', models.CharField(max_length=60, null=True)),
                ('LifeQuestion1', models.CharField(max_length=200, null=True)),
                ('LifeAnswer1', models.CharField(max_length=200, null=True)),
                ('LifeQuestion2', models.CharField(max_length=200, null=True)),
                ('LifeAnswer2', models.CharField(max_length=200, null=True)),
                ('LifeQuestion3', models.CharField(max_length=200, null=True)),
                ('LifeAnswer3', models.CharField(max_length=200, null=True)),
                ('LifeQuestion4', models.CharField(max_length=200, null=True)),
                ('LifeAnswer4', models.CharField(max_length=200, null=True)),
                ('PersonalFld1', models.CharField(max_length=50, null=True)),
                ('PersonalFld2', models.CharField(max_length=50, null=True)),
                ('PersonalFld3', models.CharField(max_length=50, null=True)),
                ('PersonalFld4', models.CharField(max_length=50, null=True)),
                ('PersonalFld5', models.CharField(max_length=50, null=True)),
                ('PersonalFld6', models.CharField(max_length=50, null=True)),
                ('BelieverSinceYear', models.IntegerField(null=True)),
                ('BelieverSinceComment', models.TextField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmPersonCommitmentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatusSince', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='PmPersonEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EvaluationDate', models.DateTimeField()),
                ('Evaluator', models.CharField(max_length=60)),
                ('EvaluationType', models.CharField(max_length=24)),
                ('EvaluationComments', models.TextField(max_length=1000, null=True)),
                ('PersonEvalAction', models.TextField(max_length=1000, null=True)),
                ('NextEvaluationDate', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmPersonFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PmPersonLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YearsOfExperience', models.IntegerField(default=99)),
                ('YearsOfExperienceAsOf', models.DateTimeField(null=True)),
                ('Comment', models.CharField(max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmPersonQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YearsOfExperience', models.IntegerField(default=99)),
                ('YearsOfExperienceAsOf', models.DateTimeField(null=True)),
                ('Informal', models.BooleanField(default=False)),
                ('Comment', models.CharField(max_length=512, null=True)),
                ('QualificationDate', models.DateTimeField(null=True)),
                ('QualificationExpiry', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmPersonSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PersonSkillKey', models.IntegerField(unique=True)),
                ('DescriptionEnglish', models.CharField(max_length=160)),
                ('DescriptionLocal', models.CharField(max_length=160, null=True)),
                ('YearsOfExperience', models.IntegerField(default=99, null=True)),
                ('YearsOfExperienceAsOf', models.DateTimeField(null=True)),
                ('ProfessionalSkill', models.BooleanField(default=False, null=True)),
                ('CurrentOccupation', models.BooleanField(default=False, null=True)),
                ('Degree', models.CharField(max_length=160, null=True)),
                ('YearOfDegree', models.IntegerField(null=True)),
                ('Comment', models.TextField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmShortTermApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StAppDate', models.DateTimeField()),
                ('StApplicationType', models.CharField(max_length=32)),
                ('StBasicOutreachId', models.CharField(max_length=32)),
                ('StBasicDelete', models.BooleanField(default=False, null=True)),
                ('StApplicationOnHold', models.BooleanField(default=False, null=True)),
                ('StApplicationHoldReason', models.CharField(max_length=40, null=True)),
                ('ConfirmedOptionCode', models.CharField(max_length=26, null=True)),
                ('StOutreachOnly', models.BooleanField(default=False, null=True)),
                ('ArrivalDetailsStatus', models.CharField(default='no', max_length=24, null=True)),
                ('Arrival', models.DateTimeField(null=True)),
                ('ArrivalHour', models.IntegerField(default=0, null=True)),
                ('ArrivalMinute', models.IntegerField(default=0, null=True)),
                ('ToCongTravelInfo', models.CharField(max_length=32, null=True)),
                ('ArrivalTransportNeeded', models.BooleanField(default=False, null=True)),
                ('ArrivalComments', models.CharField(max_length=160, null=True)),
                ('DepartureDetailsStatus', models.CharField(default='no', max_length=24, null=True)),
                ('Departure', models.DateTimeField(null=True)),
                ('DepartureHour', models.IntegerField(default=0, null=True)),
                ('DepartureMinute', models.IntegerField(default=0, null=True)),
                ('FromCongTravelInfo', models.CharField(max_length=32, null=True)),
                ('DepartureTransportNeeded', models.BooleanField(default=False, null=True)),
                ('DepartureComments', models.CharField(max_length=160, null=True)),
                ('TransportInterest', models.BooleanField(default=False, null=True)),
                ('StFgLeader', models.BooleanField(default=False, null=True)),
                ('StFgCode', models.CharField(max_length=32, null=True)),
                ('StOutreachSpecialCost', models.IntegerField(default=0, null=True)),
                ('StCngrssSpecialCost', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmSpecialNeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MedicalComment', models.TextField(max_length=5000, null=True)),
                ('DietaryComment', models.TextField(max_length=5000, null=True)),
                ('OtherSpecialNeed', models.TextField(max_length=5000, null=True)),
                ('Vegetarian', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmStaffData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SiteKey', models.IntegerField(default=0)),
                ('Key', models.IntegerField()),
                ('StartOfCommitment', models.DateTimeField()),
                ('StartDateApprox', models.BooleanField(default=False, null=True)),
                ('EndOfCommitment', models.DateTimeField(null=True)),
                ('StaffDataComments', models.CharField(max_length=640, null=True)),
                ('JobTitle', models.CharField(max_length=400, null=True)),
                ('OfficePhoneExt', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PmYearProgramApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YpAppDate', models.DateTimeField()),
                ('YpBasicAppType', models.CharField(max_length=32)),
                ('YpBasicDelete', models.BooleanField(default=False, null=True)),
                ('HoOrientConfBookingKey', models.CharField(max_length=16, null=True)),
                ('YpAgreedSupportFigure', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('YpAgreedJoiningCharge', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('YpSupportPeriod', models.CharField(max_length=24, null=True)),
                ('YpJoiningConf', models.IntegerField(default=1, null=True)),
                ('StartOfCommitment', models.DateTimeField(null=True)),
                ('EndOfCommitment', models.DateTimeField(null=True)),
                ('IntendedComLengthMonths', models.IntegerField(null=True)),
                ('AssistantTo', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='POccupation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(default='UNKNOWN', max_length=32, unique=True)),
                ('OccupationDescription', models.CharField(max_length=80)),
                ('ValidOccupation', models.BooleanField(default=True, null=True)),
                ('Deletable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='POrganisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=160, null=True)),
                ('Religious', models.BooleanField(default=False, null=True)),
                ('Foundation', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Key', models.IntegerField(default=0, unique=True)),
                ('ShortName', models.CharField(max_length=160, null=True)),
                ('PartnerShortNameLoc', models.CharField(max_length=160, null=True)),
                ('PrintedName', models.CharField(max_length=160, null=True)),
                ('KeyInformation', models.CharField(max_length=500, null=True)),
                ('Comment', models.TextField(max_length=10000, null=True)),
                ('StatusChange', models.DateTimeField(null=True)),
                ('StatusChangeReason', models.CharField(max_length=400, null=True)),
                ('DeletedPartner', models.BooleanField(default=False, null=True)),
                ('FinanceComment', models.CharField(max_length=510, null=True)),
                ('ReceiptLetterFrequency', models.CharField(max_length=24, null=True)),
                ('ReceiptEachGift', models.BooleanField(default=True, null=True)),
                ('EmailGiftStatement', models.BooleanField(default=False, null=True)),
                ('AnonymousDonor', models.BooleanField(default=False, null=True)),
                ('NoSolicitations', models.BooleanField(default=False, null=True)),
                ('ChildIndicator', models.BooleanField(default=False, null=True)),
                ('Restricted', models.IntegerField(default=0, null=True)),
                ('UserId', models.CharField(max_length=40, null=True)),
                ('GroupId', models.CharField(max_length=40, null=True)),
                ('PreviousName', models.CharField(max_length=512, null=True)),
                ('FirstContactFreeform', models.CharField(max_length=400, null=True)),
                ('IntranetId', models.CharField(max_length=200, null=True)),
                ('Timezone', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ActionNumber', models.IntegerField()),
                ('ActionFreeform', models.CharField(max_length=400, null=True)),
                ('PerformByDate', models.DateTimeField(null=True)),
                ('ActionComplete', models.BooleanField(null=True)),
                ('ActionCompleteDate', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Sequence', models.IntegerField(default=0)),
                ('Index', models.IntegerField()),
                ('Value', models.CharField(max_length=400)),
                ('Comment', models.CharField(max_length=400, null=True)),
                ('Primary', models.BooleanField(default=False)),
                ('WithinOrganisation', models.BooleanField(default=False)),
                ('Specialised', models.BooleanField(default=False)),
                ('Confidential', models.BooleanField(default=False)),
                ('Current', models.BooleanField(default=True)),
                ('NoLongerCurrentFrom', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerAttributeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CategoryCode', models.CharField(max_length=60, unique=True)),
                ('CategoryDesc', models.CharField(max_length=200)),
                ('Index', models.IntegerField(default=0)),
                ('PartnerContactCategory', models.BooleanField()),
                ('SystemCategory', models.BooleanField(default=False)),
                ('Deletable', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerAttributeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AttributeType', models.CharField(max_length=60, unique=True)),
                ('Description', models.CharField(max_length=100)),
                ('Index', models.IntegerField(default=0)),
                ('AttributeTypeValueKind', models.CharField(max_length=80)),
                ('HyperlinkFormat', models.CharField(max_length=120, null=True)),
                ('SpecialLabel', models.CharField(max_length=100, null=True)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerBankingDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerClasses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PartnerClass', models.CharField(max_length=24, unique=True)),
                ('Description', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Index', models.IntegerField()),
                ('Sequence', models.IntegerField()),
                ('Comment', models.TextField(max_length=10000, null=True)),
                ('CommentType', models.CharField(max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerContactAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerContactFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerGiftDestination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateEffective', models.DateTimeField()),
                ('DateExpires', models.DateTimeField(null=True)),
                ('Active', models.BooleanField(null=True)),
                ('DefaultGiftDestination', models.BooleanField(null=True)),
                ('Comment', models.CharField(max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerGraphic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GraphicLabel', models.CharField(max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InterestNumber', models.IntegerField()),
                ('Level', models.IntegerField(null=True)),
                ('Comment', models.CharField(max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LastPartnerId', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateEffective', models.DateTimeField(null=True)),
                ('DateGoodUntil', models.DateTimeField(null=True)),
                ('SendMail', models.BooleanField(default=False, null=True)),
                ('LocationDetailComment', models.CharField(max_length=512, null=True)),
                ('Restricted', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PartnerMembershipKey', models.IntegerField(unique=True)),
                ('ExpiryDate', models.DateTimeField(null=True)),
                ('DateCancelled', models.DateTimeField(null=True)),
                ('StartDate', models.DateTimeField()),
                ('MembershipStatus', models.CharField(default='ACTIVE', max_length=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerMembershipPaid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DatePayment', models.DateTimeField()),
                ('PeriodDate', models.DateTimeField(null=True)),
                ('AmountPaid', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('HoursServed', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerMerge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MergeDate', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Comment', models.TextField(max_length=2000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PartnerReminderId', models.IntegerField(unique=True)),
                ('ReminderId', models.IntegerField(default=0)),
                ('ActionType', models.CharField(max_length=16, null=True)),
                ('ReminderReason', models.CharField(max_length=600, null=True)),
                ('Comment', models.TextField(max_length=5000, null=True)),
                ('EventDate', models.DateTimeField()),
                ('FirstReminderDate', models.DateTimeField(null=True)),
                ('ReminderFrequency', models.IntegerField(default=0, null=True)),
                ('LastReminderSent', models.DateTimeField(null=True)),
                ('NextReminderDate', models.DateTimeField(null=True)),
                ('ReminderActive', models.BooleanField(default=True)),
                ('EmailAddress', models.TextField(max_length=1000, null=True)),
                ('Restricted', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PartnerSetId', models.CharField(max_length=40)),
                ('Name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerSetPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerShortCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('C', models.CharField(max_length=30)),
                ('FieldKey', models.IntegerField()),
                ('Recipient', models.BooleanField(null=True)),
                ('Donor', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StateIndex', models.IntegerField()),
                ('StateFreeform', models.CharField(max_length=400, null=True)),
                ('StateStartDate', models.DateTimeField(null=True)),
                ('StateEndDate', models.DateTimeField(null=True)),
                ('StateComplete', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StatusCode', models.CharField(max_length=16, unique=True)),
                ('PartnerStatusDescription', models.CharField(max_length=120)),
                ('PartnerIsActive', models.BooleanField(default=True, null=True)),
                ('IncludePartnerOnReport', models.BooleanField(default=False, null=True)),
                ('Deletable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerTaxDeductiblePct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateValidFrom', models.DateTimeField()),
                ('PercentageTaxDeductible', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='PPartnerType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ValidFrom', models.DateTimeField(null=True)),
                ('ValidUntil', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=64, null=True)),
                ('FirstName', models.CharField(max_length=64, null=True)),
                ('PreferedName', models.CharField(max_length=64, null=True)),
                ('MiddleName1', models.CharField(max_length=64, null=True)),
                ('MiddleName2', models.CharField(max_length=64, null=True)),
                ('MiddleName3', models.CharField(max_length=64, null=True)),
                ('FamilyName', models.CharField(max_length=64, null=True)),
                ('Decorations', models.CharField(max_length=64, null=True)),
                ('DateOfBirth', models.DateTimeField(null=True)),
                ('Gender', models.CharField(default='Unknown', max_length=16, null=True)),
                ('FamilyId', models.IntegerField(default=0)),
                ('AcademicTitle', models.CharField(max_length=48, null=True)),
                ('MaritalStatusSince', models.DateTimeField(null=True)),
                ('MaritalStatusComment', models.CharField(max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPostcodeRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Range', models.CharField(max_length=64, unique=True)),
                ('From', models.CharField(max_length=40, null=True)),
                ('To', models.CharField(max_length=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPostcodeRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Region', models.CharField(max_length=64, unique=True)),
                ('Description', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPostcodeRegionRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=60, unique=True)),
                ('Descr', models.CharField(max_length=400, null=True)),
                ('ProcessPartnerClasses', models.CharField(max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PProposalSubmissionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SubmissionTypeCode', models.CharField(max_length=30, unique=True)),
                ('SubmissionTypeDescription', models.CharField(max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=20, unique=True)),
                ('NumberOfIssues', models.IntegerField(default=0, null=True)),
                ('NumberOfReminders', models.IntegerField(default=1, null=True)),
                ('PublicationDescription', models.CharField(max_length=80, null=True)),
                ('ValidPublication', models.BooleanField(default=True, null=True)),
                ('LabelCode', models.CharField(max_length=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PPublicationCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateEffective', models.DateTimeField()),
                ('PublicationCost', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
                ('PostageCost', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PReasonSubscriptionCancelled',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=24, unique=True)),
                ('Description', models.CharField(max_length=160)),
            ],
        ),
        migrations.CreateModel(
            name='PReasonSubscriptionGiven',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=24, unique=True)),
                ('Description', models.CharField(max_length=160)),
            ],
        ),
        migrations.CreateModel(
            name='PRecentPartners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WhenDate', models.DateTimeField(null=True)),
                ('WhenTime', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=20, unique=True)),
                ('RelationDescription', models.CharField(max_length=100)),
                ('Deletable', models.BooleanField(default=True)),
                ('ReciprocalDescription', models.CharField(max_length=100)),
                ('ValidRelation', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PRelationCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=40, unique=True)),
                ('Description', models.CharField(max_length=100, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PReminderCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=40, unique=True)),
                ('Description', models.CharField(max_length=100, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=60)),
                ('Descr', models.CharField(max_length=400, null=True)),
                ('Active', models.BooleanField(null=True)),
                ('SystemState', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PublicationCopies', models.IntegerField(default=1, null=True)),
                ('ExpiryDate', models.DateTimeField(null=True)),
                ('ProvisionalExpiryDate', models.DateTimeField(null=True)),
                ('GratisSubscription', models.BooleanField(default=True)),
                ('DateNoticeSent', models.DateTimeField(null=True)),
                ('DateCancelled', models.DateTimeField(null=True)),
                ('StartDate', models.DateTimeField()),
                ('NumberIssuesReceived', models.IntegerField(default=0)),
                ('NumberComplimentary', models.IntegerField(default=1)),
                ('SubscriptionRenewalDate', models.DateTimeField(null=True)),
                ('SubscriptionStatus', models.CharField(default='PERMANENT', max_length=24, null=True)),
                ('FirstIssue', models.DateTimeField(null=True)),
                ('LastIssue', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtAbilityArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=40, unique=True)),
                ('Descr', models.CharField(max_length=90)),
                ('RequirementAreaDescr', models.CharField(max_length=90)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtAbilityLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AbilityLevel', models.IntegerField(default=0, unique=True)),
                ('Descr', models.CharField(max_length=90)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtApplicantStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=32, unique=True)),
                ('Description', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtApplicationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AppTypeName', models.CharField(max_length=32, unique=True)),
                ('AppTypeDescr', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('AppFormType', models.CharField(max_length=32, null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtArrivalPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=32, unique=True)),
                ('Description', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtAssignmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=2, unique=True)),
                ('AssignmentCodeDescr', models.CharField(max_length=70)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TaxType', models.CharField(max_length=16)),
                ('TaxRef', models.CharField(max_length=100)),
                ('ValidFrom', models.DateTimeField(null=True)),
                ('ValidUntil', models.DateTimeField(null=True)),
                ('Comment', models.CharField(max_length=512, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtCongressCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=32, unique=True)),
                ('Description', models.CharField(max_length=80, null=True)),
                ('PreCongress', models.BooleanField(default=False, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
                ('Discounted', models.BooleanField(default=False, null=True)),
                ('Outreach', models.BooleanField(default=False, null=True)),
                ('Conference', models.BooleanField(default=False, null=True)),
                ('Participant', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=40, unique=True)),
                ('Descr', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Title', models.CharField(max_length=64, unique=True)),
                ('CommonTitle', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtLanguageLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LanguageLevel', models.IntegerField(default=0, unique=True)),
                ('Descr', models.CharField(max_length=70)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
                ('LanguageComment', models.CharField(max_length=800, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtLeadershipRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=2, unique=True)),
                ('Description', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtMaritalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=2, unique=True)),
                ('Description', models.CharField(max_length=80)),
                ('Assignable', models.BooleanField(default=True)),
                ('AssignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtOutreachPreferenceLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=2, unique=True)),
                ('Description', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtPassportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=32, unique=True)),
                ('Description', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=60)),
                ('Descr', models.CharField(max_length=160, null=True)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtQualificationArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=32, unique=True)),
                ('Descr', models.CharField(max_length=80)),
                ('Qualification', models.BooleanField(default=False)),
                ('QualificationDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtQualificationLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('QualificationLevel', models.IntegerField(default=0, unique=True)),
                ('Descr', models.CharField(max_length=80)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtSkillCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=60, unique=True)),
                ('Description', models.CharField(max_length=160, null=True)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtSkillLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Level', models.IntegerField(default=0, unique=True)),
                ('Description', models.CharField(max_length=100)),
                ('Unassignable', models.BooleanField(default=False)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtSpecialApplicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=32, unique=True)),
                ('Description', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PtTravelType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=32, unique=True)),
                ('Description', models.CharField(max_length=80, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=20, unique=True)),
                ('TypeDescription', models.CharField(max_length=120)),
                ('ValidType', models.BooleanField(default=True, null=True)),
                ('SystemType', models.BooleanField(default=False, null=True)),
                ('TypeDeletable', models.BooleanField(default=True, null=True)),
                ('TypeMotivationGroup', models.CharField(max_length=16, null=True)),
                ('TypeMotivationDetail', models.CharField(max_length=16, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PTypeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=40, unique=True)),
                ('Description', models.CharField(max_length=100, null=True)),
                ('Unassignable', models.BooleanField(default=False, null=True)),
                ('UnassignableDate', models.DateTimeField(null=True)),
                ('Deletable', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=160, null=True)),
                ('Description', models.TextField(max_length=1000, null=True)),
                ('Minimum', models.IntegerField(default=0, null=True)),
                ('Maximum', models.IntegerField(default=0, null=True)),
                ('Present', models.IntegerField(default=0, null=True)),
                ('PartTimers', models.IntegerField(default=0, null=True)),
                ('OutreachCode', models.CharField(max_length=26, null=True)),
                ('OutreachCost', models.DecimalField(decimal_places=10, default=0, max_digits=24)),
            ],
        ),
        migrations.CreateModel(
            name='PVenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=160, null=True)),
                ('Code', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='SChangeEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TableName', models.CharField(max_length=64)),
                ('Rowid', models.CharField(max_length=40)),
                ('ChangeType', models.CharField(max_length=2)),
                ('NaturalKey', models.TextField(max_length=2000)),
                ('Date', models.DateTimeField()),
                ('Time', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SDefaultFileVolume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Area', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='SErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ErrorCode', models.CharField(max_length=12)),
                ('Date', models.DateTimeField()),
                ('Time', models.IntegerField(default=0)),
                ('ReleaseNumber', models.CharField(max_length=24)),
                ('FileName', models.CharField(max_length=80)),
                ('ProcessId', models.CharField(max_length=16, null=True)),
                ('MessageLine1', models.CharField(max_length=120)),
                ('MessageLine2', models.CharField(max_length=80, null=True)),
                ('MessageLine3', models.CharField(max_length=80, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=20, unique=True)),
                ('FormDescription', models.CharField(max_length=80)),
                ('DefaultFont', models.CharField(max_length=64, null=True)),
                ('DefaultFontSize', models.IntegerField(default=0)),
                ('DefaultLpi', models.IntegerField(default=0)),
                ('DefaultCpi', models.IntegerField(default=0)),
                ('FormLength', models.DecimalField(decimal_places=3, default=0, max_digits=6)),
                ('FormWidth', models.DecimalField(decimal_places=3, default=0, max_digits=6)),
                ('FormOrientation', models.CharField(default='P', max_length=2, null=True)),
                ('UnitOfMeasure', models.BooleanField(null=True)),
                ('TopMargin', models.DecimalField(decimal_places=3, default=0, max_digits=6, null=True)),
                ('BottomMargin', models.DecimalField(decimal_places=3, default=0, max_digits=6, null=True)),
                ('LeftMargin', models.DecimalField(decimal_places=3, default=0, max_digits=6, null=True)),
                ('RightMargin', models.DecimalField(decimal_places=3, default=0, max_digits=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FunctionId', models.CharField(max_length=30, unique=True)),
                ('ModuleName', models.CharField(max_length=200)),
                ('SubModuleName', models.CharField(max_length=200, null=True)),
                ('Name', models.CharField(max_length=200)),
                ('Filename', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SFunctionRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CodeToRun', models.CharField(max_length=400, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GroupId', models.CharField(max_length=20)),
                ('UnitKey', models.IntegerField(default=0)),
                ('Name', models.CharField(max_length=100, null=True)),
                ('CanModify', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupCostCentre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SGroupDataLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReadAccess', models.BooleanField(null=True)),
                ('WriteAccess', models.BooleanField(null=True)),
                ('DeleteAccess', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupExtract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReadAccess', models.BooleanField(null=True)),
                ('WriteAccess', models.BooleanField(null=True)),
                ('DeleteAccess', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupFileInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReadAccess', models.BooleanField(null=True)),
                ('WriteAccess', models.BooleanField(null=True)),
                ('DeleteAccess', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CanAccess', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupGift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReadAccess', models.BooleanField(null=True)),
                ('WriteAccess', models.BooleanField(null=True)),
                ('DeleteAccess', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SGroupLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReadAccess', models.BooleanField(null=True)),
                ('WriteAccess', models.BooleanField(null=True)),
                ('DeleteAccess', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupModuleAccessPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CanAccess', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupMotivation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReadAccess', models.BooleanField(null=True)),
                ('WriteAccess', models.BooleanField(null=True)),
                ('DeleteAccess', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupPartnerContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReadAccess', models.BooleanField(null=True)),
                ('WriteAccess', models.BooleanField(null=True)),
                ('DeleteAccess', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupPartnerLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReadAccess', models.BooleanField(null=True)),
                ('WriteAccess', models.BooleanField(null=True)),
                ('DeleteAccess', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupPartnerReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReadAccess', models.BooleanField(null=True)),
                ('WriteAccess', models.BooleanField(null=True)),
                ('DeleteAccess', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupPartnerSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('InclusiveOrExclusive', models.BooleanField()),
                ('ReadAccess', models.BooleanField(null=True)),
                ('WriteAccess', models.BooleanField(null=True)),
                ('DeleteAccess', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SGroupTableAccessPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TableName', models.CharField(max_length=64)),
                ('CanCreate', models.BooleanField(default=True, null=True)),
                ('CanModify', models.BooleanField(default=True, null=True)),
                ('CanDelete', models.BooleanField(default=True, null=True)),
                ('CanInquire', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SJobGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LabelName', models.CharField(max_length=20, unique=True)),
                ('LabelDescription', models.CharField(max_length=80, null=True)),
                ('TopMargin', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('SideMargin', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('VerticalPitch', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('HorizontalPitch', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('LabelHeight', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('LabelWidth', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('LabelsAcross', models.IntegerField(default=0)),
                ('LabelsDown', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SLanguageSpecific',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MonthName1', models.CharField(max_length=40)),
                ('MonthName2', models.CharField(max_length=40)),
                ('MonthName3', models.CharField(max_length=40)),
                ('MonthName4', models.CharField(max_length=40)),
                ('MonthName5', models.CharField(max_length=40)),
                ('MonthName6', models.CharField(max_length=40)),
                ('MonthName7', models.CharField(max_length=40)),
                ('MonthName8', models.CharField(max_length=40)),
                ('MonthName9', models.CharField(max_length=40)),
                ('MonthName10', models.CharField(max_length=40)),
                ('MonthName11', models.CharField(max_length=40)),
                ('MonthName12', models.CharField(max_length=40)),
                ('MonthNameShort1', models.CharField(max_length=6)),
                ('MonthNameShort2', models.CharField(max_length=6)),
                ('MonthNameShort3', models.CharField(max_length=6)),
                ('MonthNameShort4', models.CharField(max_length=6)),
                ('MonthNameShort5', models.CharField(max_length=6)),
                ('MonthNameShort6', models.CharField(max_length=6)),
                ('MonthNameShort7', models.CharField(max_length=6)),
                ('MonthNameShort8', models.CharField(max_length=6)),
                ('MonthNameShort9', models.CharField(max_length=6)),
                ('MonthNameShort10', models.CharField(max_length=6)),
                ('MonthNameShort11', models.CharField(max_length=6)),
                ('MonthNameShort12', models.CharField(max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='SLogin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LoginProcessId', models.IntegerField(unique=True)),
                ('UserId', models.CharField(max_length=20)),
                ('Time', models.IntegerField(default=0)),
                ('Date', models.DateTimeField()),
                ('LoginType', models.CharField(max_length=50)),
                ('LoginDetails', models.CharField(max_length=500, null=True)),
                ('LoginProcessIdRef', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SLogonMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LogonMessage', models.CharField(max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ModuleId', models.CharField(max_length=20, unique=True)),
                ('Name', models.CharField(max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SModuleTableAccessPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TableName', models.CharField(max_length=64)),
                ('CanCreate', models.BooleanField(default=True, null=True)),
                ('CanModify', models.BooleanField(default=True, null=True)),
                ('CanDelete', models.BooleanField(default=True, null=True)),
                ('CanInquire', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SPatchLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PatchName', models.CharField(max_length=24, unique=True)),
                ('DateRun', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='SReportResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReportId', models.CharField(max_length=192, unique=True)),
                ('SessionId', models.CharField(max_length=128)),
                ('ValidUntil', models.DateTimeField()),
                ('ParameterList', models.TextField(max_length=20, null=True)),
                ('ResultHtml', models.TextField(max_length=20, null=True)),
                ('Success', models.BooleanField(default=False, null=True)),
                ('ErrorMessage', models.TextField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SReportsToArchive',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ReportTitle', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TemplateId', models.IntegerField(unique=True)),
                ('ReportType', models.CharField(max_length=100)),
                ('ReportVariant', models.CharField(max_length=100)),
                ('Author', models.CharField(max_length=100)),
                ('Default', models.BooleanField(default=False)),
                ('Private', models.BooleanField(default=False)),
                ('PrivateDefault', models.BooleanField(default=False)),
                ('Readonly', models.BooleanField(default=False)),
                ('XmlText', models.TextField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SessionId', models.CharField(max_length=128, unique=True)),
                ('ValidUntil', models.DateTimeField()),
                ('SessionValues', models.TextField(max_length=20, null=True)),
                ('UserId', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SSystemDefaults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DefaultCode', models.CharField(max_length=100, unique=True)),
                ('DefaultCodeLocal', models.CharField(max_length=100, null=True)),
                ('DefaultCodeIntl', models.CharField(max_length=100, null=True)),
                ('DefaultDescription', models.CharField(max_length=500, null=True)),
                ('Category', models.CharField(max_length=100, null=True)),
                ('DefaultValue', models.CharField(max_length=500, null=True)),
                ('ReadOnly', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SSystemDefaultsGui',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ControlId', models.IntegerField()),
                ('ControlLabel', models.CharField(max_length=100)),
                ('ControlType', models.CharField(max_length=20)),
                ('ControlOptionalValues', models.CharField(max_length=200, null=True)),
                ('ControlAttributes', models.CharField(max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SSystemStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SystemDisabledDate', models.DateTimeField(null=True)),
                ('SystemDisabledTime', models.IntegerField(default=0, null=True)),
                ('SystemDisabledReason', models.CharField(max_length=160, null=True)),
                ('SystemAvailableDate', models.DateTimeField(null=True)),
                ('SystemAvailableTime', models.IntegerField(default=0, null=True)),
                ('SystemLoginStatus', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserId', models.CharField(max_length=20, unique=True)),
                ('EmailAddress', models.CharField(max_length=100, null=True)),
                ('FirstName', models.CharField(max_length=64, null=True)),
                ('LastName', models.CharField(max_length=64, null=True)),
                ('PasswordHash', models.CharField(max_length=64, null=True)),
                ('PasswordSalt', models.CharField(max_length=64, null=True)),
                ('PwdSchemeVersion', models.IntegerField(default=1, null=True)),
                ('PasswordNeedsChange', models.BooleanField(default=False, null=True)),
                ('FailedLogins', models.IntegerField(default=0, null=True)),
                ('AccountLocked', models.BooleanField(default=False, null=True)),
                ('Retired', models.BooleanField(default=False, null=True)),
                ('LastLoginTime', models.IntegerField(default=0, null=True)),
                ('LastLoginDate', models.DateTimeField(null=True)),
                ('LanguageCode', models.CharField(default='99', max_length=20, null=True)),
                ('CanModify', models.BooleanField(default=True, null=True)),
                ('RecordDelete', models.BooleanField(default=False, null=True)),
                ('AcquisitionCode', models.CharField(max_length=16, null=True)),
                ('DefaultLedgerNumber', models.IntegerField(default=0, null=True)),
                ('FailedLoginTime', models.IntegerField(default=0, null=True)),
                ('FailedLoginDate', models.DateTimeField(null=True)),
                ('PartnerKey', models.IntegerField(null=True)),
                ('PasswordResetToken', models.CharField(max_length=64, null=True)),
                ('PasswordResetValidUntil', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SUserAccountActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('UserId', models.CharField(max_length=20)),
                ('ActivityDate', models.DateTimeField()),
                ('ActivityTime', models.IntegerField(default=0)),
                ('ActivityType', models.CharField(max_length=50)),
                ('ActivityDetails', models.TextField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SVolumePartnerGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=60, unique=True)),
                ('Description', models.CharField(max_length=160, null=True)),
                ('Comment', models.CharField(max_length=600, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SWorkflowDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WorkflowId', models.IntegerField(unique=True)),
                ('Name', models.CharField(max_length=60)),
                ('Description', models.CharField(max_length=600, null=True)),
                ('ModuleList', models.CharField(max_length=200, null=True)),
                ('TypeOfSharedData', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SWorkflowInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WorkflowInstanceId', models.IntegerField(unique=True)),
                ('KeyDataItem', models.CharField(max_length=200, null=True)),
                ('KeyDataItemType', models.CharField(max_length=200, null=True)),
                ('SystemGenerated', models.BooleanField(null=True)),
                ('Complete', models.BooleanField(null=True)),
                ('Note', models.CharField(max_length=600, null=True)),
                ('Workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SWorkflowInstance_Workflow', to='data.sworkflowdefinition')),
            ],
        ),
        migrations.CreateModel(
            name='UmJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('JobKey', models.IntegerField()),
                ('JobType', models.CharField(default='Short Term', max_length=40)),
                ('FromDate', models.DateTimeField(null=True)),
                ('ToDate', models.DateTimeField(null=True)),
                ('Minimum', models.IntegerField(default=0, null=True)),
                ('Maximum', models.IntegerField(default=0, null=True)),
                ('Present', models.IntegerField(default=0, null=True)),
                ('PartTimers', models.IntegerField(default=0, null=True)),
                ('Applications', models.IntegerField(default=0, null=True)),
                ('PartTime', models.BooleanField(default=False, null=True)),
                ('TrainingPeriod', models.CharField(default='One month', max_length=30)),
                ('CommitmentPeriod', models.CharField(default='Three months', max_length=30)),
                ('Public', models.BooleanField(default=False, null=True)),
                ('JobPublicity', models.IntegerField(default=0, null=True)),
                ('PreviousInternalExpReq', models.BooleanField(default=False, null=True)),
                ('Position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmJob_Position', to='data.ptposition')),
                ('Unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmJob_Unit', to='data.punit')),
            ],
        ),
        migrations.CreateModel(
            name='UUnitType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(max_length=24, unique=True)),
                ('Name', models.CharField(max_length=64)),
                ('TypeDeletable', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UmUnitStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ChildUnit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmUnitStructure_ChildUnit', to='data.punit')),
                ('ParentUnit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmUnitStructure_ParentUnit', to='data.punit')),
            ],
        ),
        migrations.CreateModel(
            name='UmUnitLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YearsOfExperience', models.IntegerField(default=99)),
                ('UnitLangComment', models.CharField(max_length=80, null=True)),
                ('UnitLanguageReq', models.CharField(max_length=16, null=True)),
                ('Language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmUnitLanguage_Language', to='data.planguage')),
                ('LanguageLevel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmUnitLanguage_LanguageLevel', to='data.ptlanguagelevel')),
                ('Partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmUnitLanguage_Partner', to='data.punit')),
            ],
        ),
        migrations.CreateModel(
            name='UmUnitEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DateOfEvaluation', models.DateTimeField()),
                ('EvaluationNumber', models.IntegerField(default=0)),
                ('EvaluatorFamilyStatus', models.CharField(max_length=40)),
                ('EvaluatorHomeCountry', models.CharField(max_length=40)),
                ('EvaluatorAge', models.IntegerField(default=0)),
                ('EvaluatorSex', models.CharField(max_length=2)),
                ('UnitEvaluationData', models.CharField(max_length=160, null=True)),
                ('Partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmUnitEvaluation_Partner', to='data.punit')),
            ],
        ),
        migrations.CreateModel(
            name='UmUnitCost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ValidFromDate', models.DateTimeField()),
                ('SingleCostsPeriodIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('CoupleCostsPeriodIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('Child1CostsPeriodIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('Child2CostsPeriodIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('Child3CostsPeriodIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('AdultJoiningChargeIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('CoupleJoiningChargeIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ChildJoiningChargeIntl', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ChargePeriod', models.CharField(max_length=24)),
                ('SingleCostsPeriodBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('CoupleCostsPeriodBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('Child1CostsPeriodBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('Child2CostsPeriodBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('Child3CostsPeriodBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('AdultJoiningChargeBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('CoupleJoiningChargeBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('ChildJoiningChargeBase', models.DecimalField(decimal_places=10, default=0, max_digits=24, null=True)),
                ('LocalCurrency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='UmUnitCost_LocalCurrency', to='data.acurrency')),
                ('Partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmUnitCost_Partner', to='data.punit')),
            ],
        ),
        migrations.CreateModel(
            name='UmUnitAbility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YearsOfExperience', models.IntegerField(default=99)),
                ('AbilityArea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmUnitAbility_AbilityArea', to='data.ptabilityarea')),
                ('AbilityLevel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmUnitAbility_AbilityLevel', to='data.ptabilitylevel')),
                ('Partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmUnitAbility_Partner', to='data.punit')),
            ],
        ),
        migrations.CreateModel(
            name='UmJobRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YearsOfExperience', models.IntegerField(default=99)),
                ('AbilityArea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmJobRequirement_AbilityArea', to='data.ptabilityarea')),
                ('AbilityLevel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='UmJobRequirement_AbilityLevel', to='data.ptabilitylevel')),
                ('Job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmJobRequirement_Job', to='data.umjob')),
            ],
        ),
        migrations.CreateModel(
            name='UmJobQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YearsOfExperience', models.IntegerField(default=99, null=True)),
                ('Informal', models.BooleanField(default=False, null=True)),
                ('Job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmJobQualification_Job', to='data.umjob')),
                ('QualificationArea', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmJobQualification_QualificationArea', to='data.ptqualificationarea')),
                ('QualificationLevel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='UmJobQualification_QualificationLevel', to='data.ptqualificationlevel')),
            ],
        ),
        migrations.CreateModel(
            name='UmJobLanguage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YearsOfExperience', models.IntegerField(default=99)),
                ('Job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmJobLanguage_Job', to='data.umjob')),
                ('Language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='UmJobLanguage_Language', to='data.planguage')),
                ('LanguageLevel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='UmJobLanguage_LanguageLevel', to='data.ptlanguagelevel')),
            ],
        ),
        migrations.CreateModel(
            name='SWorkflowUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SWorkflowUser_User', to='data.suser')),
                ('Workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SWorkflowUser_Workflow', to='data.sworkflowdefinition')),
            ],
        ),
        migrations.CreateModel(
            name='SWorkflowStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StepNumber', models.IntegerField()),
                ('Function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SWorkflowStep_Function', to='data.sfunction')),
                ('Workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SWorkflowStep_Workflow', to='data.sworkflowdefinition')),
            ],
        ),
        migrations.CreateModel(
            name='SWorkflowInstanceStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('StepNumber', models.IntegerField()),
                ('Complete', models.BooleanField(null=True)),
                ('OutputParameters', models.CharField(max_length=200, null=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SWorkflowInstanceStep_User', to='data.suser')),
                ('WorkflowInstance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SWorkflowInstanceStep_WorkflowInstance', to='data.sworkflowinstance')),
            ],
        ),
        migrations.CreateModel(
            name='SWorkflowGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SWorkflowGroup_Group', to='data.sgroup')),
                ('Workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SWorkflowGroup_Workflow', to='data.sworkflowdefinition')),
            ],
        ),
        migrations.CreateModel(
            name='SVolumePartnerGroupPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SVolumePartnerGroupPartner_Group', to='data.svolumepartnergroup')),
                ('Partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SVolumePartnerGroupPartner_Partner', to='data.ppartner')),
            ],
        ),
        migrations.CreateModel(
            name='SVolume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=160, unique=True)),
                ('Path', models.TextField(max_length=4096, null=True)),
                ('Comment', models.TextField(max_length=1000, null=True)),
                ('ParentVolume', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SVolume_ParentVolume', to='data.svolume')),
            ],
        ),
        migrations.CreateModel(
            name='SValidOutputForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Form', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SValidOutputForm_Form', to='data.sform')),
                ('Module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SValidOutputForm_Module', to='data.smodule')),
            ],
        ),
        migrations.CreateModel(
            name='SUserTableAccessPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TableName', models.CharField(max_length=64)),
                ('CanCreate', models.BooleanField(default=True, null=True)),
                ('CanModify', models.BooleanField(default=True, null=True)),
                ('CanDelete', models.BooleanField(default=True, null=True)),
                ('CanInquire', models.BooleanField(default=True, null=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SUserTableAccessPermission_User', to='data.suser')),
            ],
        ),
        migrations.CreateModel(
            name='SUserModuleAccessPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CanAccess', models.BooleanField(default=True, null=True)),
                ('Module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SUserModuleAccessPermission_Module', to='data.smodule')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SUserModuleAccessPermission_User', to='data.suser')),
            ],
        ),
        migrations.CreateModel(
            name='SUserGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SUserGroup_Group', to='data.sgroup')),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SUserGroup_User', to='data.suser')),
            ],
        ),
        migrations.CreateModel(
            name='SUserDefaults',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DefaultCode', models.CharField(max_length=100)),
                ('DefaultValue', models.CharField(max_length=500, null=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SUserDefaults_User', to='data.suser')),
            ],
        ),
        migrations.AddConstraint(
            model_name='suseraccountactivity',
            constraint=models.UniqueConstraint(fields=('UserId', 'ActivityDate', 'ActivityTime', 'ActivityType'), name='s_user_account_activity_pk'),
        ),
        migrations.AddField(
            model_name='ssystemstatus',
            name='User',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='SSystemStatus_User', to='data.suser'),
        ),
        migrations.AddField(
            model_name='ssystemdefaultsgui',
            name='Default',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SSystemDefaultsGui_Default', to='data.ssystemdefaults'),
        ),
        migrations.AddField(
            model_name='spatchlog',
            name='User',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SPatchLog_User', to='data.suser'),
        ),
        migrations.AddField(
            model_name='smoduletableaccesspermission',
            name='Module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SModuleTableAccessPermission_Module', to='data.smodule'),
        ),
        migrations.AddField(
            model_name='slogonmessage',
            name='Language',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='SLogonMessage_Language', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='slanguagespecific',
            name='Language',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='SLanguageSpecific_Language', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='slabel',
            name='Form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SLabel_Form', to='data.sform'),
        ),
        migrations.AddField(
            model_name='sjobgroup',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SJobGroup_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sjobgroup',
            name='Job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SJobGroup_Job', to='data.umjob'),
        ),
        migrations.AddField(
            model_name='sgrouptableaccesspermission',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupTableAccessPermission_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgrouppartnerset',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupPartnerSet_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgrouppartnerset',
            name='PartnerSet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupPartnerSet_PartnerSet', to='data.ppartnerset'),
        ),
        migrations.AddField(
            model_name='sgrouppartnerreminder',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupPartnerReminder_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgrouppartnerreminder',
            name='PartnerReminder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupPartnerReminder_PartnerReminder', to='data.ppartnerreminder'),
        ),
        migrations.AddField(
            model_name='sgrouppartnerlocation',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupPartnerLocation_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgrouppartnerlocation',
            name='PartnerLocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupPartnerLocation_PartnerLocation', to='data.ppartnerlocation'),
        ),
        migrations.AddField(
            model_name='sgrouppartnercontact',
            name='Contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupPartnerContact_Contact', to='data.pcontactlog'),
        ),
        migrations.AddField(
            model_name='sgrouppartnercontact',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupPartnerContact_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgroupmotivation',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupMotivation_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgroupmotivation',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupMotivation_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='sgroupmotivation',
            name='MotivationDetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupMotivation_MotivationDetail', to='data.amotivationdetail'),
        ),
        migrations.AddField(
            model_name='sgroupmoduleaccesspermission',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupModuleAccessPermission_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgroupmoduleaccesspermission',
            name='Module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupModuleAccessPermission_Module', to='data.smodule'),
        ),
        migrations.AddField(
            model_name='sgrouplocation',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupLocation_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgrouplocation',
            name='Location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupLocation_Location', to='data.plocation'),
        ),
        migrations.AddField(
            model_name='sgroupledger',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupLedger_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgroupledger',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupLedger_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='sgroupgift',
            name='Gift',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupGift_Gift', to='data.agift'),
        ),
        migrations.AddField(
            model_name='sgroupgift',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupGift_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgroupgift',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupGift_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='sgroupfunction',
            name='Function',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupFunction_Function', to='data.sfunction'),
        ),
        migrations.AddField(
            model_name='sgroupfunction',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupFunction_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgroupfileinfo',
            name='FileInfo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupFileInfo_FileInfo', to='data.pfileinfo'),
        ),
        migrations.AddField(
            model_name='sgroupfileinfo',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupFileInfo_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgroupextract',
            name='Extract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupExtract_Extract', to='data.mextractmaster'),
        ),
        migrations.AddField(
            model_name='sgroupextract',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupExtract_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgroupdatalabel',
            name='DataLabel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupDataLabel_DataLabel', to='data.pdatalabel'),
        ),
        migrations.AddField(
            model_name='sgroupdatalabel',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupDataLabel_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgroupcostcentre',
            name='CostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupCostCentre_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='sgroupcostcentre',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupCostCentre_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='sgroupcostcentre',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SGroupCostCentre_Ledger', to='data.aledger'),
        ),
        migrations.AddConstraint(
            model_name='sgroup',
            constraint=models.UniqueConstraint(fields=('GroupId', 'UnitKey'), name='s_group_pk'),
        ),
        migrations.AddField(
            model_name='sfunctionrelationship',
            name='Function1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SFunctionRelationship_Function1', to='data.sfunction'),
        ),
        migrations.AddField(
            model_name='sfunctionrelationship',
            name='Function2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SFunctionRelationship_Function2', to='data.sfunction'),
        ),
        migrations.AddField(
            model_name='serrorlog',
            name='User',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SErrorLog_User', to='data.suser'),
        ),
        migrations.AddField(
            model_name='sdefaultfilevolume',
            name='Group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SDefaultFileVolume_Group', to='data.svolumepartnergroup'),
        ),
        migrations.AddField(
            model_name='sdefaultfilevolume',
            name='Volume',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SDefaultFileVolume_Volume', to='data.svolume'),
        ),
        migrations.AddConstraint(
            model_name='schangeevent',
            constraint=models.UniqueConstraint(fields=('TableName', 'Rowid'), name='s_change_event_pk'),
        ),
        migrations.AddField(
            model_name='pvenue',
            name='ContactPartner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PVenue_ContactPartner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pvenue',
            name='Currency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PVenue_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='pvenue',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PVenue_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='punit',
            name='Country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PUnit_Country', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='punit',
            name='OutreachCostCurrency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PUnit_OutreachCostCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='punit',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PUnit_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='punit',
            name='PrimaryOffice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PUnit_PrimaryOffice', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='punit',
            name='UnitType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PUnit_UnitType', to='data.uunittype'),
        ),
        migrations.AddField(
            model_name='ptype',
            name='Category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PType_Category', to='data.ptypecategory'),
        ),
        migrations.AddField(
            model_name='ptposition',
            name='PositionScope',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PtPosition_PositionScope', to='data.uunittype'),
        ),
        migrations.AddField(
            model_name='ptitle',
            name='DefaultAddresseeType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PTitle_DefaultAddresseeType', to='data.paddresseetype'),
        ),
        migrations.AddField(
            model_name='ptax',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PTax_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='psubscription',
            name='GiftFrom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PSubscription_GiftFrom', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='psubscription',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PSubscription_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='psubscription',
            name='Publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PSubscription_Publication', to='data.ppublication'),
        ),
        migrations.AddField(
            model_name='psubscription',
            name='ReasonSubsCancelled',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PSubscription_ReasonSubsCancelled', to='data.preasonsubscriptioncancelled'),
        ),
        migrations.AddField(
            model_name='psubscription',
            name='ReasonSubsGiven',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PSubscription_ReasonSubsGiven', to='data.preasonsubscriptiongiven'),
        ),
        migrations.AddField(
            model_name='pstate',
            name='Process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PState_Process', to='data.pprocess'),
        ),
        migrations.AddField(
            model_name='prelation',
            name='RelationCategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PRelation_RelationCategory', to='data.prelationcategory'),
        ),
        migrations.AddField(
            model_name='precentpartners',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PRecentPartners_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='precentpartners',
            name='User',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PRecentPartners_User', to='data.suser'),
        ),
        migrations.AddField(
            model_name='ppublicationcost',
            name='Currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPublicationCost_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='ppublicationcost',
            name='Publication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPublicationCost_Publication', to='data.ppublication'),
        ),
        migrations.AddField(
            model_name='ppublication',
            name='Frequency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPublication_Frequency', to='data.afrequency'),
        ),
        migrations.AddField(
            model_name='ppublication',
            name='PublicationLanguage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPublication_PublicationLanguage', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='ppostcoderegionrange',
            name='Range',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPostcodeRegionRange_Range', to='data.ppostcoderange'),
        ),
        migrations.AddField(
            model_name='ppostcoderegionrange',
            name='Region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPostcodeRegionRange_Region', to='data.ppostcoderegion'),
        ),
        migrations.AddField(
            model_name='pperson',
            name='Family',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPerson_Family', to='data.pfamily'),
        ),
        migrations.AddField(
            model_name='pperson',
            name='MaritalStatus',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPerson_MaritalStatus', to='data.ptmaritalstatus'),
        ),
        migrations.AddField(
            model_name='pperson',
            name='Occupation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPerson_Occupation', to='data.poccupation'),
        ),
        migrations.AddField(
            model_name='pperson',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PPerson_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnertype',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerType_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnertype',
            name='Type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerType_Type', to='data.ptype'),
        ),
        migrations.AddField(
            model_name='ppartnertaxdeductiblepct',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerTaxDeductiblePct_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnerstate',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerState_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnerstate',
            name='State',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerState_State', to='data.pstate'),
        ),
        migrations.AddField(
            model_name='ppartnershortcode',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerShortCode_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnersetpartner',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerSetPartner_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnersetpartner',
            name='PartnerSet',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerSetPartner_PartnerSet', to='data.ppartnerset'),
        ),
        migrations.AddField(
            model_name='ppartnerset',
            name='Unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerSet_Unit', to='data.punit'),
        ),
        migrations.AddField(
            model_name='ppartnerreminder',
            name='Category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerReminder_Category', to='data.premindercategory'),
        ),
        migrations.AddField(
            model_name='ppartnerreminder',
            name='Contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerReminder_Contact', to='data.pcontactlog'),
        ),
        migrations.AddField(
            model_name='ppartnerreminder',
            name='Module',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerReminder_Module', to='data.smodule'),
        ),
        migrations.AddField(
            model_name='ppartnerreminder',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerReminder_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnerreminder',
            name='User',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerReminder_User', to='data.suser'),
        ),
        migrations.AddField(
            model_name='ppartnerreminder',
            name='UserRestriction',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerReminder_UserRestriction', to='data.suser'),
        ),
        migrations.AddField(
            model_name='ppartnerrelationship',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerRelationship_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnerrelationship',
            name='RelatedPartner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerRelationship_RelatedPartner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnerrelationship',
            name='Relation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerRelationship_Relation', to='data.prelation'),
        ),
        migrations.AddField(
            model_name='ppartnermerge',
            name='MergeFrom',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerMerge_MergeFrom', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnermerge',
            name='MergeTo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerMerge_MergeTo', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnermerge',
            name='MergedBy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerMerge_MergedBy', to='data.suser'),
        ),
        migrations.AddField(
            model_name='ppartnermembershippaid',
            name='Membership',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerMembershipPaid_Membership', to='data.pmembership'),
        ),
        migrations.AddField(
            model_name='ppartnermembershippaid',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerMembershipPaid_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnermembership',
            name='Membership',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerMembership_Membership', to='data.pmembership'),
        ),
        migrations.AddField(
            model_name='ppartnermembership',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerMembership_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnerlocation',
            name='Location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerLocation_Location', to='data.plocation'),
        ),
        migrations.AddField(
            model_name='ppartnerlocation',
            name='LocationType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerLocation_LocationType', to='data.plocationtype'),
        ),
        migrations.AddField(
            model_name='ppartnerlocation',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerLocation_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnerledger',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerLedger_Partner', to='data.punit'),
        ),
        migrations.AddField(
            model_name='ppartnerinterest',
            name='Country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerInterest_Country', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='ppartnerinterest',
            name='Field',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerInterest_Field', to='data.punit'),
        ),
        migrations.AddField(
            model_name='ppartnerinterest',
            name='Interest',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerInterest_Interest', to='data.pinterest'),
        ),
        migrations.AddField(
            model_name='ppartnerinterest',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerInterest_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnergraphic',
            name='FileInfo',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerGraphic_FileInfo', to='data.pfileinfo'),
        ),
        migrations.AddField(
            model_name='ppartnergraphic',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerGraphic_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnergiftdestination',
            name='Field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerGiftDestination_Field', to='data.punit'),
        ),
        migrations.AddField(
            model_name='ppartnergiftdestination',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerGiftDestination_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnergiftdestination',
            name='PartnerClass',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerGiftDestination_PartnerClass', to='data.ppartnerclasses'),
        ),
        migrations.AddField(
            model_name='ppartnergiftdestination',
            name='StaffData',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerGiftDestination_StaffData', to='data.pmstaffdata'),
        ),
        migrations.AddField(
            model_name='ppartnerfile',
            name='FileInfo',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerFile_FileInfo', to='data.pfileinfo'),
        ),
        migrations.AddField(
            model_name='ppartnerfile',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerFile_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnercontactfile',
            name='Contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerContactFile_Contact', to='data.pcontactlog'),
        ),
        migrations.AddField(
            model_name='ppartnercontactfile',
            name='FileInfo',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerContactFile_FileInfo', to='data.pfileinfo'),
        ),
        migrations.AddField(
            model_name='ppartnercontactfile',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerContactFile_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnercontactattribute',
            name='Contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerContactAttribute_Contact', to='data.pcontactlog'),
        ),
        migrations.AddField(
            model_name='ppartnercontactattribute',
            name='ContactAttributeDetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerContactAttribute_ContactAttributeDetail', to='data.pcontactattributedetail'),
        ),
        migrations.AddField(
            model_name='ppartnercontact',
            name='ContactLog',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerContact_ContactLog', to='data.pcontactlog'),
        ),
        migrations.AddField(
            model_name='ppartnercontact',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerContact_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnercomment',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerComment_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnerbankingdetails',
            name='BankingDetails',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerBankingDetails_BankingDetails', to='data.pbankingdetails'),
        ),
        migrations.AddField(
            model_name='ppartnerbankingdetails',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerBankingDetails_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnerattributetype',
            name='Category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerAttributeType_Category', to='data.ppartnerattributecategory'),
        ),
        migrations.AddField(
            model_name='ppartnerattribute',
            name='AttributeType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerAttribute_AttributeType', to='data.ppartnerattributetype'),
        ),
        migrations.AddField(
            model_name='ppartnerattribute',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerAttribute_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='ppartnerattribute',
            name='ValueCountry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerAttribute_ValueCountry', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='ppartneraction',
            name='Action',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerAction_Action', to='data.paction'),
        ),
        migrations.AddField(
            model_name='ppartneraction',
            name='Group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerAction_Group', to='data.sgroup'),
        ),
        migrations.AddField(
            model_name='ppartneraction',
            name='PartnerReminder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerAction_PartnerReminder', to='data.ppartnerreminder'),
        ),
        migrations.AddField(
            model_name='ppartneraction',
            name='UserThatPerformedAction',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerAction_UserThatPerformedAction', to='data.suser'),
        ),
        migrations.AddField(
            model_name='ppartneraction',
            name='UserToPerformAction',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartnerAction_UserToPerformAction', to='data.suser'),
        ),
        migrations.AddField(
            model_name='ppartner',
            name='Acquisition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartner_Acquisition', to='data.pacquisition'),
        ),
        migrations.AddField(
            model_name='ppartner',
            name='AddresseeType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartner_AddresseeType', to='data.paddresseetype'),
        ),
        migrations.AddField(
            model_name='ppartner',
            name='FirstContact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartner_FirstContact', to='data.pfirstcontact'),
        ),
        migrations.AddField(
            model_name='ppartner',
            name='Language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartner_Language', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='ppartner',
            name='PartnerClass',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartner_PartnerClass', to='data.ppartnerclasses'),
        ),
        migrations.AddField(
            model_name='ppartner',
            name='Status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PPartner_Status', to='data.ppartnerstatus'),
        ),
        migrations.AddField(
            model_name='porganisation',
            name='Business',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='POrganisation_Business', to='data.pbusiness'),
        ),
        migrations.AddField(
            model_name='porganisation',
            name='ContactPartner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='POrganisation_ContactPartner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='porganisation',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='POrganisation_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pmyearprogramapplication',
            name='GeneralApplication',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PmYearProgramApplication_GeneralApplication', to='data.pmgeneralapplication'),
        ),
        migrations.AddField(
            model_name='pmyearprogramapplication',
            name='Position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmYearProgramApplication_Position', to='data.ptposition'),
        ),
        migrations.AddField(
            model_name='pmstaffdata',
            name='HomeOffice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmStaffData_HomeOffice', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pmstaffdata',
            name='OfficeRecruitedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmStaffData_OfficeRecruitedBy', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pmstaffdata',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmStaffData_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmstaffdata',
            name='ReceivingField',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmStaffData_ReceivingField', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pmstaffdata',
            name='ReceivingFieldOffice',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmStaffData_ReceivingFieldOffice', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pmstaffdata',
            name='Status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmStaffData_Status', to='data.pmcommitmentstatus'),
        ),
        migrations.AddField(
            model_name='pmspecialneed',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PmSpecialNeed_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='ArrivalPoint',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_ArrivalPoint', to='data.ptarrivalpoint'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='DeparturePoint',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_DeparturePoint', to='data.ptarrivalpoint'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='GeneralApplication',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_GeneralApplication', to='data.pmgeneralapplication'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='OutreachRole',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_OutreachRole', to='data.ptcongresscode'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='StConfirmedOption',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_StConfirmedOption', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='StCongress',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_StCongress', to='data.ptcongresscode'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='StCongressLanguage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_StCongressLanguage', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='StCurrentField',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_StCurrentField', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='StFieldCharged',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_StFieldCharged', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='StPreCongress',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_StPreCongress', to='data.ptcongresscode'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='StSpecialApplicant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_StSpecialApplicant', to='data.ptspecialapplicant'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='TravelTypeFromCong',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_TravelTypeFromCong', to='data.pttraveltype'),
        ),
        migrations.AddField(
            model_name='pmshorttermapplication',
            name='TravelTypeToCong',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmShortTermApplication_TravelTypeToCong', to='data.pttraveltype'),
        ),
        migrations.AddField(
            model_name='pmpersonskill',
            name='DescriptionLanguage',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonSkill_DescriptionLanguage', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='pmpersonskill',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonSkill_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmpersonskill',
            name='SkillCategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonSkill_SkillCategory', to='data.ptskillcategory'),
        ),
        migrations.AddField(
            model_name='pmpersonskill',
            name='SkillLevel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonSkill_SkillLevel', to='data.ptskilllevel'),
        ),
        migrations.AddField(
            model_name='pmpersonqualification',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonQualification_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmpersonqualification',
            name='QualificationArea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonQualification_QualificationArea', to='data.ptqualificationarea'),
        ),
        migrations.AddField(
            model_name='pmpersonqualification',
            name='QualificationLevel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonQualification_QualificationLevel', to='data.ptqualificationlevel'),
        ),
        migrations.AddField(
            model_name='pmpersonlanguage',
            name='Language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonLanguage_Language', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='pmpersonlanguage',
            name='LanguageLevel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonLanguage_LanguageLevel', to='data.ptlanguagelevel'),
        ),
        migrations.AddField(
            model_name='pmpersonlanguage',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonLanguage_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmpersonfile',
            name='FileInfo',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonFile_FileInfo', to='data.pfileinfo'),
        ),
        migrations.AddField(
            model_name='pmpersonfile',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonFile_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmpersonevaluation',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonEvaluation_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmpersoncommitmentstatus',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonCommitmentStatus_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmpersoncommitmentstatus',
            name='Status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonCommitmentStatus_Status', to='data.pmcommitmentstatus'),
        ),
        migrations.AddField(
            model_name='pmpersonaldata',
            name='Language',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonalData_Language', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='pmpersonaldata',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonalData_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmpersonabsence',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonAbsence_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmpersonability',
            name='AbilityArea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonAbility_AbilityArea', to='data.ptabilityarea'),
        ),
        migrations.AddField(
            model_name='pmpersonability',
            name='AbilityLevel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonAbility_AbilityLevel', to='data.ptabilitylevel'),
        ),
        migrations.AddField(
            model_name='pmpersonability',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPersonAbility_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmpastexperience',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPastExperience_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmpassportdetails',
            name='CountryOfIssue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmPassportDetails_CountryOfIssue', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='pmpassportdetails',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmPassportDetails_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmpassportdetails',
            name='PassportDetailsType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmPassportDetails_PassportDetailsType', to='data.ptpassporttype'),
        ),
        migrations.AddField(
            model_name='pmpassportdetails',
            name='PassportNationality',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmPassportDetails_PassportNationality', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='pmjobassignment',
            name='AssignmentType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmJobAssignment_AssignmentType', to='data.ptassignmenttype'),
        ),
        migrations.AddField(
            model_name='pmjobassignment',
            name='Job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmJobAssignment_Job', to='data.umjob'),
        ),
        migrations.AddField(
            model_name='pmjobassignment',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmJobAssignment_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pmgeneralapplication',
            name='AppType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmGeneralApplication_AppType', to='data.ptapplicationtype'),
        ),
        migrations.AddField(
            model_name='pmgeneralapplication',
            name='ClosedBy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmGeneralApplication_ClosedBy', to='data.suser'),
        ),
        migrations.AddField(
            model_name='pmgeneralapplication',
            name='GenAppCurrency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmGeneralApplication_GenAppCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='pmgeneralapplication',
            name='GenAppPossSrvUnit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmGeneralApplication_GenAppPossSrvUnit', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pmgeneralapplication',
            name='GenApplicationStatus',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmGeneralApplication_GenApplicationStatus', to='data.ptapplicantstatus'),
        ),
        migrations.AddField(
            model_name='pmgeneralapplication',
            name='GenContact1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmGeneralApplication_GenContact1', to='data.ptcontact'),
        ),
        migrations.AddField(
            model_name='pmgeneralapplication',
            name='GenContact2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmGeneralApplication_GenContact2', to='data.ptcontact'),
        ),
        migrations.AddField(
            model_name='pmgeneralapplication',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmGeneralApplication_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmgeneralapplication',
            name='PlacementPartner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmGeneralApplication_PlacementPartner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmgeneralapplication',
            name='RegistrationOffice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmGeneralApplication_RegistrationOffice', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pmformaleducation',
            name='Country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmFormalEducation_Country', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='pmformaleducation',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmFormalEducation_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmergefield',
            name='MergeForm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PMergeField_MergeForm', to='data.pmergeform'),
        ),
        migrations.AddField(
            model_name='pmembership',
            name='Frequency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PMembership_Frequency', to='data.afrequency'),
        ),
        migrations.AddField(
            model_name='pmdocumenttype',
            name='DocCategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmDocumentType_DocCategory', to='data.pmdocumentcategory'),
        ),
        migrations.AddField(
            model_name='pmdocumentfile',
            name='Document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmDocumentFile_Document', to='data.pmdocument'),
        ),
        migrations.AddField(
            model_name='pmdocumentfile',
            name='FileInfo',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PmDocumentFile_FileInfo', to='data.pfileinfo'),
        ),
        migrations.AddField(
            model_name='pmdocumentfile',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmDocumentFile_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pmdocument',
            name='ContactPartner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmDocument_ContactPartner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pmdocument',
            name='Doc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmDocument_Doc', to='data.pmdocumenttype'),
        ),
        migrations.AddField(
            model_name='pmdocument',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmDocument_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pmapplicationstatushistory',
            name='GeneralApplication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmApplicationStatusHistory_GeneralApplication', to='data.pmgeneralapplication'),
        ),
        migrations.AddField(
            model_name='pmapplicationstatushistory',
            name='Status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PmApplicationStatusHistory_Status', to='data.ptapplicantstatus'),
        ),
        migrations.AddField(
            model_name='pmapplicationfile',
            name='FileInfo',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PmApplicationFile_FileInfo', to='data.pfileinfo'),
        ),
        migrations.AddField(
            model_name='pmapplicationfile',
            name='GeneralApplication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PmApplicationFile_GeneralApplication', to='data.pmgeneralapplication'),
        ),
        migrations.AddField(
            model_name='plocation',
            name='Country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PLocation_Country', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='plabel',
            name='Form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PLabel_Form', to='data.sform'),
        ),
        migrations.AddField(
            model_name='pinterest',
            name='Category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PInterest_Category', to='data.pinterestcategory'),
        ),
        migrations.AddField(
            model_name='phroombooking',
            name='Booking',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PhRoomBooking_Booking', to='data.phbooking'),
        ),
        migrations.AddField(
            model_name='phroombooking',
            name='RoomAlloc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PhRoomBooking_RoomAlloc', to='data.pcroomalloc'),
        ),
        migrations.AddField(
            model_name='phbooking',
            name='ArInvoice',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PhBooking_ArInvoice', to='data.aarinvoice'),
        ),
        migrations.AddField(
            model_name='phbooking',
            name='Contact',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PhBooking_Contact', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pfoundationproposaldetail',
            name='AreaPartner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFoundationProposalDetail_AreaPartner', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pfoundationproposaldetail',
            name='FieldPartner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFoundationProposalDetail_FieldPartner', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pfoundationproposaldetail',
            name='FoundationProposal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PFoundationProposalDetail_FoundationProposal', to='data.pfoundationproposal'),
        ),
        migrations.AddField(
            model_name='pfoundationproposaldetail',
            name='KeyMinistry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFoundationProposalDetail_KeyMinistry', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pfoundationproposaldetail',
            name='MotivationDetail',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFoundationProposalDetail_MotivationDetail', to='data.amotivationdetail'),
        ),
        migrations.AddField(
            model_name='pfoundationproposal',
            name='FoundationPartner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PFoundationProposal_FoundationPartner', to='data.pfoundation'),
        ),
        migrations.AddField(
            model_name='pfoundationproposal',
            name='PartnerSubmittedBy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFoundationProposal_PartnerSubmittedBy', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pfoundationproposal',
            name='ProposalStatus',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFoundationProposal_ProposalStatus', to='data.pfoundationproposalstatus'),
        ),
        migrations.AddField(
            model_name='pfoundationdeadline',
            name='FoundationPartner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PFoundationDeadline_FoundationPartner', to='data.pfoundation'),
        ),
        migrations.AddField(
            model_name='pfoundation',
            name='ContactPartner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFoundation_ContactPartner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pfoundation',
            name='Owner1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFoundation_Owner1', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pfoundation',
            name='Owner2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFoundation_Owner2', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pfoundation',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PFoundation_Partner', to='data.porganisation'),
        ),
        migrations.AddField(
            model_name='pfoundation',
            name='ProposalSubmissionType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFoundation_ProposalSubmissionType', to='data.pproposalsubmissiontype'),
        ),
        migrations.AddField(
            model_name='pformality',
            name='AddresseeType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PFormality_AddresseeType', to='data.paddresseetype'),
        ),
        migrations.AddField(
            model_name='pformality',
            name='Country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PFormality_Country', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='pformality',
            name='Language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PFormality_Language', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='pform',
            name='AddressLayout',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PForm_AddressLayout', to='data.paddresslayoutcode'),
        ),
        migrations.AddField(
            model_name='pform',
            name='FormLanguage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PForm_FormLanguage', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='pform',
            name='TemplateUploadedByUser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PForm_TemplateUploadedByUser', to='data.suser'),
        ),
        migrations.AddField(
            model_name='pfileinfo',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PFileInfo_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pfileinfo',
            name='Volume',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFileInfo_Volume', to='data.svolume'),
        ),
        migrations.AddField(
            model_name='pfamily',
            name='MaritalStatus',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PFamily_MaritalStatus', to='data.ptmaritalstatus'),
        ),
        migrations.AddField(
            model_name='pfamily',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PFamily_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pdatalabelvaluepartner',
            name='DataLabel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PDataLabelValuePartner_DataLabel', to='data.pdatalabel'),
        ),
        migrations.AddField(
            model_name='pdatalabelvaluepartner',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PDataLabelValuePartner_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pdatalabelvaluepartner',
            name='ValuePartner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PDataLabelValuePartner_ValuePartner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pdatalabelvalueapplication',
            name='DataLabel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PDataLabelValueApplication_DataLabel', to='data.pdatalabel'),
        ),
        migrations.AddField(
            model_name='pdatalabelvalueapplication',
            name='GeneralApplication',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PDataLabelValueApplication_GeneralApplication', to='data.pmgeneralapplication'),
        ),
        migrations.AddField(
            model_name='pdatalabelvalueapplication',
            name='ValuePartner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PDataLabelValueApplication_ValuePartner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pdatalabeluse',
            name='DataLabel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PDataLabelUse_DataLabel', to='data.pdatalabel'),
        ),
        migrations.AddField(
            model_name='pdatalabellookup',
            name='Category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PDataLabelLookup_Category', to='data.pdatalabellookupcategory'),
        ),
        migrations.AddField(
            model_name='pdatalabel',
            name='Currency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PDataLabel_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='pdatalabel',
            name='LookupCategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PDataLabel_LookupCategory', to='data.pdatalabellookupcategory'),
        ),
        migrations.AddField(
            model_name='pcustomisedgreeting',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PCustomisedGreeting_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pcustomisedgreeting',
            name='User',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PCustomisedGreeting_User', to='data.suser'),
        ),
        migrations.AddField(
            model_name='pcsupplement',
            name='Conference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcSupplement_Conference', to='data.pcconference'),
        ),
        migrations.AddField(
            model_name='pcroomattribute',
            name='Room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcRoomAttribute_Room', to='data.pcroom'),
        ),
        migrations.AddField(
            model_name='pcroomattribute',
            name='RoomAttrType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcRoomAttribute_RoomAttrType', to='data.pcroomattributetype'),
        ),
        migrations.AddField(
            model_name='pcroomalloc',
            name='Attendee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PcRoomAlloc_Attendee', to='data.pcattendee'),
        ),
        migrations.AddField(
            model_name='pcroomalloc',
            name='Room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcRoomAlloc_Room', to='data.pcroom'),
        ),
        migrations.AddField(
            model_name='pcroom',
            name='Building',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcRoom_Building', to='data.pcbuilding'),
        ),
        migrations.AddField(
            model_name='pcountry',
            name='InternatPostalType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PCountry_InternatPostalType', to='data.pinternationalpostaltype'),
        ),
        migrations.AddField(
            model_name='pcontactlog',
            name='Contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PContactLog_Contact', to='data.pmethodofcontact'),
        ),
        migrations.AddField(
            model_name='pcontactlog',
            name='Mailing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PContactLog_Mailing', to='data.pmailing'),
        ),
        migrations.AddField(
            model_name='pcontactlog',
            name='Module',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PContactLog_Module', to='data.smodule'),
        ),
        migrations.AddField(
            model_name='pcontactlog',
            name='User',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PContactLog_User', to='data.suser'),
        ),
        migrations.AddField(
            model_name='pcontactattributedetail',
            name='ContactAttribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PContactAttributeDetail_ContactAttribute', to='data.pcontactattribute'),
        ),
        migrations.AddField(
            model_name='pconsenthistorypermission',
            name='ConsentHistoryEntry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PConsentHistoryPermission_ConsentHistoryEntry', to='data.pconsenthistory'),
        ),
        migrations.AddField(
            model_name='pconsenthistorypermission',
            name='Purpose',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PConsentHistoryPermission_Purpose', to='data.pconsentpurpose'),
        ),
        migrations.AddField(
            model_name='pconsenthistory',
            name='Channel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PConsentHistory_Channel', to='data.pconsentchannel'),
        ),
        migrations.AddField(
            model_name='pconsenthistory',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PConsentHistory_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pchurch',
            name='ContactPartner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PChurch_ContactPartner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pchurch',
            name='Denomination',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PChurch_Denomination', to='data.pdenomination'),
        ),
        migrations.AddField(
            model_name='pchurch',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PChurch_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pcgroup',
            name='Attendee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcGroup_Attendee', to='data.pcattendee'),
        ),
        migrations.AddField(
            model_name='pcextracost',
            name='Attendee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcExtraCost_Attendee', to='data.pcattendee'),
        ),
        migrations.AddField(
            model_name='pcextracost',
            name='AuthorisingField',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PcExtraCost_AuthorisingField', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pcextracost',
            name='CostType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PcExtraCost_CostType', to='data.pccosttype'),
        ),
        migrations.AddField(
            model_name='pcearlylate',
            name='Conference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcEarlyLate_Conference', to='data.pcconference'),
        ),
        migrations.AddField(
            model_name='pcdiscount',
            name='Conference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcDiscount_Conference', to='data.pcconference'),
        ),
        migrations.AddField(
            model_name='pcdiscount',
            name='CostType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcDiscount_CostType', to='data.pccosttype'),
        ),
        migrations.AddField(
            model_name='pcdiscount',
            name='DiscountCriteria',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcDiscount_DiscountCriteria', to='data.pcdiscountcriteria'),
        ),
        migrations.AddField(
            model_name='pcconferencevenue',
            name='Conference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcConferenceVenue_Conference', to='data.pcconference'),
        ),
        migrations.AddField(
            model_name='pcconferencevenue',
            name='Venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcConferenceVenue_Venue', to='data.pvenue'),
        ),
        migrations.AddField(
            model_name='pcconferenceoption',
            name='Conference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcConferenceOption_Conference', to='data.pcconference'),
        ),
        migrations.AddField(
            model_name='pcconferenceoption',
            name='OptionType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcConferenceOption_OptionType', to='data.pcconferenceoptiontype'),
        ),
        migrations.AddField(
            model_name='pcconferencecost',
            name='Conference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcConferenceCost_Conference', to='data.pcconference'),
        ),
        migrations.AddField(
            model_name='pcconference',
            name='Conference',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PcConference_Conference', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pcconference',
            name='Currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcConference_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='pcbuilding',
            name='Venue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcBuilding_Venue', to='data.pvenue'),
        ),
        migrations.AddField(
            model_name='pcattendee',
            name='Conference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcAttendee_Conference', to='data.pcconference'),
        ),
        migrations.AddField(
            model_name='pcattendee',
            name='HomeOffice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcAttendee_HomeOffice', to='data.punit'),
        ),
        migrations.AddField(
            model_name='pcattendee',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PcAttendee_Partner', to='data.pperson'),
        ),
        migrations.AddField(
            model_name='pbankingdetailsusage',
            name='PartnerBankingDetails',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PBankingDetailsUsage_PartnerBankingDetails', to='data.ppartnerbankingdetails'),
        ),
        migrations.AddField(
            model_name='pbankingdetailsusage',
            name='Type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PBankingDetailsUsage_Type', to='data.pbankingdetailsusagetype'),
        ),
        migrations.AddField(
            model_name='pbankingdetails',
            name='Bank',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PBankingDetails_Bank', to='data.pbank'),
        ),
        migrations.AddField(
            model_name='pbankingdetails',
            name='BankingType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PBankingDetails_BankingType', to='data.pbankingtype'),
        ),
        migrations.AddField(
            model_name='pbank',
            name='ContactPartner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='PBank_ContactPartner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='pbank',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='PBank_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='paddressline',
            name='AddressElement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PAddressLine_AddressElement', to='data.paddresselement'),
        ),
        migrations.AddField(
            model_name='paddresslayout',
            name='AddressLayout',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PAddressLayout_AddressLayout', to='data.paddresslayoutcode'),
        ),
        migrations.AddField(
            model_name='paddresslayout',
            name='Country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PAddressLayout_Country', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='paddresseetitleoverride',
            name='Language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PAddresseeTitleOverride_Language', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='paddressblock',
            name='AddressLayout',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PAddressBlock_AddressLayout', to='data.paddresslayoutcode'),
        ),
        migrations.AddField(
            model_name='paddressblock',
            name='Country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PAddressBlock_Country', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='paction',
            name='Process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PAction_Process', to='data.pprocess'),
        ),
        migrations.AddField(
            model_name='mextractparameter',
            name='Extract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MExtractParameter_Extract', to='data.mextractmaster'),
        ),
        migrations.AddField(
            model_name='mextractmaster',
            name='ExtractType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MExtractMaster_ExtractType', to='data.mextracttype'),
        ),
        migrations.AddField(
            model_name='mextractmaster',
            name='ManualModBy',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='MExtractMaster_ManualModBy', to='data.suser'),
        ),
        migrations.AddField(
            model_name='mextract',
            name='Extract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MExtract_Extract', to='data.mextractmaster'),
        ),
        migrations.AddField(
            model_name='mextract',
            name='Location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MExtract_Location', to='data.plocation'),
        ),
        migrations.AddField(
            model_name='mextract',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='MExtract_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='avalidledgernumber',
            name='CostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AValidLedgerNumber_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='avalidledgernumber',
            name='IltProcessingCentre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AValidLedgerNumber_IltProcessingCentre', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='avalidledgernumber',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AValidLedgerNumber_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='avalidledgernumber',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AValidLedgerNumber_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='atransanalattrib',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransAnalAttrib_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='atransanalattrib',
            name='AnalysisAttribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransAnalAttrib_AnalysisAttribute', to='data.aanalysisattribute'),
        ),
        migrations.AddField(
            model_name='atransanalattrib',
            name='Batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransAnalAttrib_Batch', to='data.abatch'),
        ),
        migrations.AddField(
            model_name='atransanalattrib',
            name='CostCentre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ATransAnalAttrib_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='atransanalattrib',
            name='FreeformAnalysis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransAnalAttrib_FreeformAnalysis', to='data.afreeformanalysis'),
        ),
        migrations.AddField(
            model_name='atransanalattrib',
            name='Journal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransAnalAttrib_Journal', to='data.ajournal'),
        ),
        migrations.AddField(
            model_name='atransanalattrib',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransAnalAttrib_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='atransanalattrib',
            name='Transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransAnalAttrib_Transaction', to='data.atransaction'),
        ),
        migrations.AddField(
            model_name='atransactiontype',
            name='CreditAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransactionType_CreditAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='atransactiontype',
            name='DebitAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransactionType_DebitAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='atransactiontype',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransactionType_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='atransactiontype',
            name='SubSystem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransactionType_SubSystem', to='data.asubsystem'),
        ),
        migrations.AddField(
            model_name='atransaction',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransaction_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='atransaction',
            name='Batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransaction_Batch', to='data.abatch'),
        ),
        migrations.AddField(
            model_name='atransaction',
            name='CostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransaction_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='atransaction',
            name='Journal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransaction_Journal', to='data.ajournal'),
        ),
        migrations.AddField(
            model_name='atransaction',
            name='KeyMinistry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ATransaction_KeyMinistry', to='data.punit'),
        ),
        migrations.AddField(
            model_name='atransaction',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATransaction_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='ataxtable',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATaxTable_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='ataxtable',
            name='TaxType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ATaxTable_TaxType', to='data.ataxtype'),
        ),
        migrations.AddField(
            model_name='asysteminterface',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ASystemInterface_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='asysteminterface',
            name='SubSystem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ASystemInterface_SubSystem', to='data.asubsystem'),
        ),
        migrations.AddField(
            model_name='asuspenseaccount',
            name='Account',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ASuspenseAccount_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='asuspenseaccount',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ASuspenseAccount_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aspecialtranstype',
            name='SubSystem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ASpecialTransType_SubSystem', to='data.asubsystem'),
        ),
        migrations.AddField(
            model_name='arevaluation',
            name='Batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARevaluation_Batch', to='data.abatch'),
        ),
        migrations.AddField(
            model_name='arevaluation',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARevaluation_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='arecurringtransanalattrib',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransAnalAttrib_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='arecurringtransanalattrib',
            name='AnalysisAttribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransAnalAttrib_AnalysisAttribute', to='data.aanalysisattribute'),
        ),
        migrations.AddField(
            model_name='arecurringtransanalattrib',
            name='CostCentre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransAnalAttrib_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='arecurringtransanalattrib',
            name='FreeformAnalysis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransAnalAttrib_FreeformAnalysis', to='data.afreeformanalysis'),
        ),
        migrations.AddField(
            model_name='arecurringtransanalattrib',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransAnalAttrib_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='arecurringtransanalattrib',
            name='RecurringBatch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransAnalAttrib_RecurringBatch', to='data.arecurringbatch'),
        ),
        migrations.AddField(
            model_name='arecurringtransanalattrib',
            name='RecurringJournal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransAnalAttrib_RecurringJournal', to='data.arecurringjournal'),
        ),
        migrations.AddField(
            model_name='arecurringtransanalattrib',
            name='RecurringTransaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransAnalAttrib_RecurringTransaction', to='data.arecurringtransaction'),
        ),
        migrations.AddField(
            model_name='arecurringtransaction',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransaction_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='arecurringtransaction',
            name='BaseCurrency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransaction_BaseCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='arecurringtransaction',
            name='CostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransaction_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='arecurringtransaction',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransaction_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='arecurringtransaction',
            name='MethodOfPayment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransaction_MethodOfPayment', to='data.amethodofpayment'),
        ),
        migrations.AddField(
            model_name='arecurringtransaction',
            name='RecurringBatch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransaction_RecurringBatch', to='data.arecurringbatch'),
        ),
        migrations.AddField(
            model_name='arecurringtransaction',
            name='RecurringJournal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransaction_RecurringJournal', to='data.arecurringjournal'),
        ),
        migrations.AddField(
            model_name='arecurringtransaction',
            name='TransactionCurrency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransaction_TransactionCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='arecurringtransaction',
            name='User',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringTransaction_User', to='data.suser'),
        ),
        migrations.AddField(
            model_name='arecurringjournal',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringJournal_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='arecurringjournal',
            name='MethodOfPayment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringJournal_MethodOfPayment', to='data.amethodofpayment'),
        ),
        migrations.AddField(
            model_name='arecurringjournal',
            name='RecurringBatch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringJournal_RecurringBatch', to='data.arecurringbatch'),
        ),
        migrations.AddField(
            model_name='arecurringjournal',
            name='TransactionCurrency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringJournal_TransactionCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='arecurringjournal',
            name='TransactionType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringJournal_TransactionType', to='data.atransactiontype'),
        ),
        migrations.AddField(
            model_name='arecurringgiftdetail',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGiftDetail_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='arecurringgiftdetail',
            name='Mailing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGiftDetail_Mailing', to='data.pmailing'),
        ),
        migrations.AddField(
            model_name='arecurringgiftdetail',
            name='MotivationDetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGiftDetail_MotivationDetail', to='data.amotivationdetail'),
        ),
        migrations.AddField(
            model_name='arecurringgiftdetail',
            name='Recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGiftDetail_Recipient', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='arecurringgiftdetail',
            name='RecipientLedgerNumber',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGiftDetail_RecipientLedgerNumber', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='arecurringgiftdetail',
            name='RecurringGift',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGiftDetail_RecurringGift', to='data.arecurringgift'),
        ),
        migrations.AddField(
            model_name='arecurringgiftdetail',
            name='RecurringGiftBatch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGiftDetail_RecurringGiftBatch', to='data.arecurringgiftbatch'),
        ),
        migrations.AddField(
            model_name='arecurringgiftbatch',
            name='BankAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGiftBatch_BankAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='arecurringgiftbatch',
            name='BankCostCentre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGiftBatch_BankCostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='arecurringgiftbatch',
            name='Currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGiftBatch_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='arecurringgiftbatch',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGiftBatch_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='arecurringgift',
            name='Donor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGift_Donor', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='arecurringgift',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGift_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='arecurringgift',
            name='MethodOfGiving',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGift_MethodOfGiving', to='data.amethodofgiving'),
        ),
        migrations.AddField(
            model_name='arecurringgift',
            name='MethodOfPayment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGift_MethodOfPayment', to='data.amethodofpayment'),
        ),
        migrations.AddField(
            model_name='arecurringgift',
            name='RecurringGiftBatch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringGift_RecurringGiftBatch', to='data.arecurringgiftbatch'),
        ),
        migrations.AddField(
            model_name='arecurringbatch',
            name='Frequency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringBatch_Frequency', to='data.afrequency'),
        ),
        migrations.AddField(
            model_name='arecurringbatch',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringBatch_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='arecurringbatch',
            name='User',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ARecurringBatch_User', to='data.suser'),
        ),
        migrations.AddField(
            model_name='aprocessedfee',
            name='AccountingPeriod',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AProcessedFee_AccountingPeriod', to='data.aaccountingperiod'),
        ),
        migrations.AddField(
            model_name='aprocessedfee',
            name='CostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AProcessedFee_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='aprocessedfee',
            name='GiftBatch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AProcessedFee_GiftBatch', to='data.agiftbatch'),
        ),
        migrations.AddField(
            model_name='aprocessedfee',
            name='GiftDetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AProcessedFee_GiftDetail', to='data.agiftdetail'),
        ),
        migrations.AddField(
            model_name='aprocessedfee',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AProcessedFee_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='amotivationgroup',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AMotivationGroup_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='amotivationdetailfee',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AMotivationDetailFee_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='amotivationdetailfee',
            name='MotivationDetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AMotivationDetailFee_MotivationDetail', to='data.amotivationdetail'),
        ),
        migrations.AddField(
            model_name='amotivationdetail',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AMotivationDetail_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='amotivationdetail',
            name='CostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AMotivationDetail_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='amotivationdetail',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AMotivationDetail_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='amotivationdetail',
            name='MotivationGroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AMotivationDetail_MotivationGroup', to='data.amotivationgroup'),
        ),
        migrations.AddField(
            model_name='amotivationdetail',
            name='Recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AMotivationDetail_Recipient', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='amotivationdetail',
            name='TaxDeductibleAccount',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AMotivationDetail_TaxDeductibleAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aledgerinitflag',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ALedgerInitFlag_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aledger',
            name='BaseCurrency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ALedger_BaseCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='aledger',
            name='Country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ALedger_Country', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='aledger',
            name='IntlCurrency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ALedger_IntlCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='aledger',
            name='TaxType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ALedger_TaxType', to='data.ataxtype'),
        ),
        migrations.AddField(
            model_name='ajournal',
            name='BaseCurrency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AJournal_BaseCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='ajournal',
            name='Batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AJournal_Batch', to='data.abatch'),
        ),
        migrations.AddField(
            model_name='ajournal',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AJournal_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='ajournal',
            name='TransactionCurrency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AJournal_TransactionCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='ajournal',
            name='TransactionType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AJournal_TransactionType', to='data.atransactiontype'),
        ),
        migrations.AddField(
            model_name='aichstewardship',
            name='AccountingPeriod',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AIchStewardship_AccountingPeriod', to='data.aaccountingperiod'),
        ),
        migrations.AddField(
            model_name='aichstewardship',
            name='CostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AIchStewardship_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='aichstewardship',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AIchStewardship_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='agiftdetail',
            name='Account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AGiftDetail_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='agiftdetail',
            name='CostCentre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AGiftDetail_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='agiftdetail',
            name='Gift',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGiftDetail_Gift', to='data.agift'),
        ),
        migrations.AddField(
            model_name='agiftdetail',
            name='GiftBatch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGiftDetail_GiftBatch', to='data.agiftbatch'),
        ),
        migrations.AddField(
            model_name='agiftdetail',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGiftDetail_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='agiftdetail',
            name='Mailing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AGiftDetail_Mailing', to='data.pmailing'),
        ),
        migrations.AddField(
            model_name='agiftdetail',
            name='MotivationDetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGiftDetail_MotivationDetail', to='data.amotivationdetail'),
        ),
        migrations.AddField(
            model_name='agiftdetail',
            name='Recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGiftDetail_Recipient', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='agiftdetail',
            name='RecipientLedgerNumber',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGiftDetail_RecipientLedgerNumber', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='agiftdetail',
            name='TaxDeductibleAccount',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AGiftDetail_TaxDeductibleAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='agiftbatch',
            name='BankAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGiftBatch_BankAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='agiftbatch',
            name='BankCostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGiftBatch_BankCostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='agiftbatch',
            name='Currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGiftBatch_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='agiftbatch',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGiftBatch_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='agift',
            name='Donor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGift_Donor', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='agift',
            name='GiftBatch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGift_GiftBatch', to='data.agiftbatch'),
        ),
        migrations.AddField(
            model_name='agift',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGift_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='agift',
            name='MethodOfGiving',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AGift_MethodOfGiving', to='data.amethodofgiving'),
        ),
        migrations.AddField(
            model_name='agift',
            name='MethodOfPayment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AGift_MethodOfPayment', to='data.amethodofpayment'),
        ),
        migrations.AddField(
            model_name='ageneralledgermasterperiod',
            name='GlmSequence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGeneralLedgerMasterPeriod_GlmSequence', to='data.ageneralledgermaster'),
        ),
        migrations.AddField(
            model_name='ageneralledgermaster',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGeneralLedgerMaster_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='ageneralledgermaster',
            name='CostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGeneralLedgerMaster_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='ageneralledgermaster',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AGeneralLedgerMaster_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='afreeformanalysis',
            name='AnalysisType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFreeformAnalysis_AnalysisType', to='data.aanalysistype'),
        ),
        migrations.AddField(
            model_name='afreeformanalysis',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFreeformAnalysis_Ledger', to='data.aledger'),
        ),
        migrations.AddConstraint(
            model_name='aformelementtype',
            constraint=models.UniqueConstraint(fields=('FormCode', 'Code'), name='a_form_element_type_pk'),
        ),
        migrations.AddField(
            model_name='aformelement',
            name='Form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFormElement_Form', to='data.aform'),
        ),
        migrations.AddField(
            model_name='aformelement',
            name='FormElementType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFormElement_FormElementType', to='data.aformelementtype'),
        ),
        migrations.AddConstraint(
            model_name='aform',
            constraint=models.UniqueConstraint(fields=('Code', 'Name'), name='a_form_pk'),
        ),
        migrations.AddField(
            model_name='afeesreceivable',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFeesReceivable_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='afeesreceivable',
            name='CostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFeesReceivable_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='afeesreceivable',
            name='DrAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFeesReceivable_DrAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='afeesreceivable',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFeesReceivable_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='afeespayable',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFeesPayable_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='afeespayable',
            name='CostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFeesPayable_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='afeespayable',
            name='DrAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFeesPayable_DrAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='afeespayable',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AFeesPayable_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aeptransaction',
            name='EpMatch',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AEpTransaction_EpMatch', to='data.aepmatch'),
        ),
        migrations.AddField(
            model_name='aeptransaction',
            name='Statement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpTransaction_Statement', to='data.aepstatement'),
        ),
        migrations.AddField(
            model_name='aepstatement',
            name='BankAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpStatement_BankAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aepstatement',
            name='BankingDetail',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AEpStatement_BankingDetail', to='data.pbankingdetails'),
        ),
        migrations.AddField(
            model_name='aepstatement',
            name='Currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpStatement_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='aepstatement',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpStatement_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aeppayment',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpPayment_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aeppayment',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpPayment_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aeppayment',
            name='User',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AEpPayment_User', to='data.suser'),
        ),
        migrations.AddField(
            model_name='aepmatch',
            name='Account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AEpMatch_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aepmatch',
            name='CostCentre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AEpMatch_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='aepmatch',
            name='Donor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpMatch_Donor', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='aepmatch',
            name='KeyMinistry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AEpMatch_KeyMinistry', to='data.punit'),
        ),
        migrations.AddField(
            model_name='aepmatch',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpMatch_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aepmatch',
            name='Mailing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AEpMatch_Mailing', to='data.pmailing'),
        ),
        migrations.AddField(
            model_name='aepmatch',
            name='MethodOfGiving',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AEpMatch_MethodOfGiving', to='data.amethodofgiving'),
        ),
        migrations.AddField(
            model_name='aepmatch',
            name='MethodOfPayment',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AEpMatch_MethodOfPayment', to='data.amethodofpayment'),
        ),
        migrations.AddField(
            model_name='aepmatch',
            name='MotivationDetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpMatch_MotivationDetail', to='data.amotivationdetail'),
        ),
        migrations.AddField(
            model_name='aepmatch',
            name='Recipient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpMatch_Recipient', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='aepmatch',
            name='RecipientLedgerNumber',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AEpMatch_RecipientLedgerNumber', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='aepdocumentpayment',
            name='ApDocument',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='AEpDocumentPayment_ApDocument', to='data.aapdocument'),
        ),
        migrations.AddField(
            model_name='aepdocumentpayment',
            name='EpPayment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpDocumentPayment_EpPayment', to='data.aeppayment'),
        ),
        migrations.AddField(
            model_name='aepdocumentpayment',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpDocumentPayment_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aepaccount',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpAccount_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aepaccount',
            name='BankingDetails',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='AEpAccount_BankingDetails', to='data.pbankingdetails'),
        ),
        migrations.AddField(
            model_name='aepaccount',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpAccount_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aepaccount',
            name='MotivationDetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEpAccount_MotivationDetail', to='data.amotivationdetail'),
        ),
        migrations.AddField(
            model_name='aemaildestination',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AEmailDestination_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='adailyexchangerate',
            name='FromCurrency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ADailyExchangeRate_FromCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='adailyexchangerate',
            name='ToCurrency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ADailyExchangeRate_ToCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='acurrencylanguage',
            name='Currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ACurrencyLanguage_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='acurrencylanguage',
            name='Language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ACurrencyLanguage_Language', to='data.planguage'),
        ),
        migrations.AddField(
            model_name='acurrency',
            name='Country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ACurrency_Country', to='data.pcountry'),
        ),
        migrations.AddField(
            model_name='acrdtnoteinvoicelink',
            name='CreditNoteDocument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ACrdtNoteInvoiceLink_CreditNoteDocument', to='data.aapdocument'),
        ),
        migrations.AddField(
            model_name='acrdtnoteinvoicelink',
            name='InvoiceDocument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ACrdtNoteInvoiceLink_InvoiceDocument', to='data.aapdocument'),
        ),
        migrations.AddField(
            model_name='acrdtnoteinvoicelink',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ACrdtNoteInvoiceLink_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='acostcentretype',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ACostCentreType_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='acostcentre',
            name='CostCentreType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ACostCentre_CostCentreType', to='data.acostcentretype'),
        ),
        migrations.AddField(
            model_name='acostcentre',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ACostCentre_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='acorporateexchangerate',
            name='FromCurrency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ACorporateExchangeRate_FromCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='acorporateexchangerate',
            name='ToCurrency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ACorporateExchangeRate_ToCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='abudgetrevision',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ABudgetRevision_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='abudgetperiod',
            name='BudgetSequence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ABudgetPeriod_BudgetSequence', to='data.abudget'),
        ),
        migrations.AddField(
            model_name='abudget',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ABudget_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='abudget',
            name='BudgetRevision',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ABudget_BudgetRevision', to='data.abudgetrevision'),
        ),
        migrations.AddField(
            model_name='abudget',
            name='BudgetType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ABudget_BudgetType', to='data.abudgettype'),
        ),
        migrations.AddField(
            model_name='abudget',
            name='CostCentre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ABudget_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='abudget',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ABudget_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='abatch',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ABatch_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aarinvoicediscount',
            name='ArDiscount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoiceDiscount_ArDiscount', to='data.aardiscount'),
        ),
        migrations.AddField(
            model_name='aarinvoicediscount',
            name='ArInvoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoiceDiscount_ArInvoice', to='data.aarinvoice'),
        ),
        migrations.AddField(
            model_name='aarinvoicediscount',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoiceDiscount_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aarinvoicedetaildiscount',
            name='ArDiscount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoiceDetailDiscount_ArDiscount', to='data.aardiscount'),
        ),
        migrations.AddField(
            model_name='aarinvoicedetaildiscount',
            name='ArInvoiceDetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoiceDetailDiscount_ArInvoiceDetail', to='data.aarinvoicedetail'),
        ),
        migrations.AddField(
            model_name='aarinvoicedetaildiscount',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoiceDetailDiscount_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aarinvoicedetail',
            name='ArArticlePrice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoiceDetail_ArArticlePrice', to='data.aararticleprice'),
        ),
        migrations.AddField(
            model_name='aarinvoicedetail',
            name='ArInvoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoiceDetail_ArInvoice', to='data.aarinvoice'),
        ),
        migrations.AddField(
            model_name='aarinvoicedetail',
            name='Currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoiceDetail_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='aarinvoicedetail',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoiceDetail_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aarinvoicedetail',
            name='TaxTable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoiceDetail_TaxTable', to='data.ataxtable'),
        ),
        migrations.AddField(
            model_name='aarinvoice',
            name='Currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoice_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='aarinvoice',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoice_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aarinvoice',
            name='Partner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoice_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='aarinvoice',
            name='TaxTable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArInvoice_TaxTable', to='data.ataxtable'),
        ),
        migrations.AddField(
            model_name='aardiscountpercategory',
            name='ArCategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArDiscountPerCategory_ArCategory', to='data.aarcategory'),
        ),
        migrations.AddField(
            model_name='aardiscountpercategory',
            name='ArDiscount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArDiscountPerCategory_ArDiscount', to='data.aardiscount'),
        ),
        migrations.AddField(
            model_name='aardiscount',
            name='ArArticle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AArDiscount_ArArticle', to='data.aararticle'),
        ),
        migrations.AddField(
            model_name='aardiscount',
            name='Currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArDiscount_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='aardiscount',
            name='PartnerType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AArDiscount_PartnerType', to='data.ptype'),
        ),
        migrations.AddField(
            model_name='aardefaultdiscount',
            name='ArCategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArDefaultDiscount_ArCategory', to='data.aarcategory'),
        ),
        migrations.AddField(
            model_name='aardefaultdiscount',
            name='ArDiscount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArDefaultDiscount_ArDiscount', to='data.aardiscount'),
        ),
        migrations.AddField(
            model_name='aararticleprice',
            name='ArArticle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArArticlePrice_ArArticle', to='data.aararticle'),
        ),
        migrations.AddField(
            model_name='aararticleprice',
            name='Currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArArticlePrice_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='aararticle',
            name='ArCategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArArticle_ArCategory', to='data.aarcategory'),
        ),
        migrations.AddField(
            model_name='aararticle',
            name='TaxType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AArArticle_TaxType', to='data.ataxtype'),
        ),
        migrations.AddField(
            model_name='aapsupplier',
            name='Currency',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApSupplier_Currency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='aapsupplier',
            name='Partner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='AApSupplier_Partner', to='data.ppartner'),
        ),
        migrations.AddField(
            model_name='aappayment',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApPayment_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aappayment',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApPayment_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aappayment',
            name='User',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AApPayment_User', to='data.suser'),
        ),
        migrations.AddField(
            model_name='aapdocumentpayment',
            name='ApDocument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApDocumentPayment_ApDocument', to='data.aapdocument'),
        ),
        migrations.AddField(
            model_name='aapdocumentpayment',
            name='ApPayment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApDocumentPayment_ApPayment', to='data.aappayment'),
        ),
        migrations.AddField(
            model_name='aapdocumentpayment',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApDocumentPayment_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aapdocumentdetail',
            name='Account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AApDocumentDetail_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aapdocumentdetail',
            name='ApDocument',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApDocumentDetail_ApDocument', to='data.aapdocument'),
        ),
        migrations.AddField(
            model_name='aapdocumentdetail',
            name='CostCentre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AApDocumentDetail_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='aapdocumentdetail',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApDocumentDetail_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aapdocument',
            name='ApAccount',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AApDocument_ApAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aapdocument',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApDocument_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aapdocument',
            name='Partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApDocument_Partner', to='data.aapsupplier'),
        ),
        migrations.AddField(
            model_name='aapanalattrib',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApAnalAttrib_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aapanalattrib',
            name='AnalysisAttribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApAnalAttrib_AnalysisAttribute', to='data.aanalysisattribute'),
        ),
        migrations.AddField(
            model_name='aapanalattrib',
            name='ApDocumentDetail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApAnalAttrib_ApDocumentDetail', to='data.aapdocumentdetail'),
        ),
        migrations.AddField(
            model_name='aapanalattrib',
            name='FreeformAnalysis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApAnalAttrib_FreeformAnalysis', to='data.afreeformanalysis'),
        ),
        migrations.AddField(
            model_name='aapanalattrib',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AApAnalAttrib_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aanalysistype',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAnalysisType_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aanalysisattribute',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAnalysisAttribute_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aanalysisattribute',
            name='AnalysisType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAnalysisAttribute_AnalysisType', to='data.aanalysistype'),
        ),
        migrations.AddField(
            model_name='aanalysisattribute',
            name='CostCentre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AAnalysisAttribute_CostCentre', to='data.acostcentre'),
        ),
        migrations.AddField(
            model_name='aanalysisattribute',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAnalysisAttribute_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aaccountproperty',
            name='Account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAccountProperty_Account', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aaccountproperty',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAccountProperty_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aaccountproperty',
            name='Property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAccountProperty_Property', to='data.aaccountpropertycode'),
        ),
        migrations.AddField(
            model_name='aaccountingsystemparameter',
            name='Ledger',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='AAccountingSystemParameter_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aaccountingperiod',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAccountingPeriod_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aaccounthierarchydetail',
            name='AccountHierarchy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAccountHierarchyDetail_AccountHierarchy', to='data.aaccounthierarchy'),
        ),
        migrations.AddField(
            model_name='aaccounthierarchydetail',
            name='AccountToReportTo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAccountHierarchyDetail_AccountToReportTo', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aaccounthierarchydetail',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAccountHierarchyDetail_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aaccounthierarchydetail',
            name='ReportingAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAccountHierarchyDetail_ReportingAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aaccounthierarchy',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAccountHierarchy_Ledger', to='data.aledger'),
        ),
        migrations.AddField(
            model_name='aaccounthierarchy',
            name='RootAccount',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAccountHierarchy_RootAccount', to='data.aaccount'),
        ),
        migrations.AddField(
            model_name='aaccount',
            name='BankingDetails',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AAccount_BankingDetails', to='data.pbankingdetails'),
        ),
        migrations.AddField(
            model_name='aaccount',
            name='BudgetType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AAccount_BudgetType', to='data.abudgettype'),
        ),
        migrations.AddField(
            model_name='aaccount',
            name='ForeignCurrency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='AAccount_ForeignCurrency', to='data.acurrency'),
        ),
        migrations.AddField(
            model_name='aaccount',
            name='Ledger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='AAccount_Ledger', to='data.aledger'),
        ),
        migrations.AddConstraint(
            model_name='umunitstructure',
            constraint=models.UniqueConstraint(fields=('ParentUnit', 'ChildUnit'), name='um_unit_structure_pk'),
        ),
        migrations.AddConstraint(
            model_name='umunitlanguage',
            constraint=models.UniqueConstraint(fields=('Partner', 'Language', 'LanguageLevel'), name='um_unit_language_pk'),
        ),
        migrations.AddConstraint(
            model_name='umunitevaluation',
            constraint=models.UniqueConstraint(fields=('Partner', 'DateOfEvaluation', 'EvaluationNumber'), name='um_unit_evaluation_pk'),
        ),
        migrations.AddConstraint(
            model_name='umunitcost',
            constraint=models.UniqueConstraint(fields=('Partner', 'ValidFromDate'), name='um_unit_cost_pk'),
        ),
        migrations.AddConstraint(
            model_name='umunitability',
            constraint=models.UniqueConstraint(fields=('Partner', 'AbilityArea'), name='um_unit_ability_pk'),
        ),
        migrations.AddConstraint(
            model_name='umjobrequirement',
            constraint=models.UniqueConstraint(fields=('Job', 'AbilityArea'), name='um_job_requirement_pk'),
        ),
        migrations.AddConstraint(
            model_name='umjobqualification',
            constraint=models.UniqueConstraint(fields=('Job', 'QualificationArea'), name='um_job_qualification_pk'),
        ),
        migrations.AddConstraint(
            model_name='umjoblanguage',
            constraint=models.UniqueConstraint(fields=('Job', 'Language'), name='um_job_language_pk'),
        ),
        migrations.AddConstraint(
            model_name='umjob',
            constraint=models.UniqueConstraint(fields=('Unit', 'Position', 'JobKey'), name='um_job_pk'),
        ),
        migrations.AddConstraint(
            model_name='sworkflowuser',
            constraint=models.UniqueConstraint(fields=('Workflow', 'User'), name='s_workflow_user_pk'),
        ),
        migrations.AddConstraint(
            model_name='sworkflowstep',
            constraint=models.UniqueConstraint(fields=('Workflow', 'StepNumber'), name='s_workflow_step_pk'),
        ),
        migrations.AddConstraint(
            model_name='sworkflowinstancestep',
            constraint=models.UniqueConstraint(fields=('WorkflowInstance', 'StepNumber'), name='s_workflow_instance_step_pk'),
        ),
        migrations.AddConstraint(
            model_name='sworkflowgroup',
            constraint=models.UniqueConstraint(fields=('Workflow', 'Group'), name='s_workflow_group_pk'),
        ),
        migrations.AddConstraint(
            model_name='svolumepartnergrouppartner',
            constraint=models.UniqueConstraint(fields=('Group', 'Partner'), name='s_volume_partner_group_ptn_pk'),
        ),
        migrations.AddConstraint(
            model_name='svalidoutputform',
            constraint=models.UniqueConstraint(fields=('Module', 'Form'), name='s_valid_output_form_pk'),
        ),
        migrations.AddConstraint(
            model_name='susertableaccesspermission',
            constraint=models.UniqueConstraint(fields=('User', 'TableName'), name='s_user_table_acc_perm_pk'),
        ),
        migrations.AddConstraint(
            model_name='susermoduleaccesspermission',
            constraint=models.UniqueConstraint(fields=('User', 'Module'), name='s_user_module_acc_perm_pk'),
        ),
        migrations.AddConstraint(
            model_name='susergroup',
            constraint=models.UniqueConstraint(fields=('User', 'Group'), name='s_user_group_pk'),
        ),
        migrations.AddConstraint(
            model_name='suserdefaults',
            constraint=models.UniqueConstraint(fields=('User', 'DefaultCode'), name='s_user_defaults_pk'),
        ),
        migrations.AddConstraint(
            model_name='ssystemdefaultsgui',
            constraint=models.UniqueConstraint(fields=('Default', 'ControlId'), name='s_system_defaults_gui_pk'),
        ),
        migrations.AddConstraint(
            model_name='smoduletableaccesspermission',
            constraint=models.UniqueConstraint(fields=('Module', 'TableName'), name='s_module_table_acc_perm_pk'),
        ),
        migrations.AddConstraint(
            model_name='sjobgroup',
            constraint=models.UniqueConstraint(fields=('Job', 'Group'), name='s_job_group_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgrouptableaccesspermission',
            constraint=models.UniqueConstraint(fields=('Group', 'TableName'), name='s_group_table_acc_perm_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgrouppartnerset',
            constraint=models.UniqueConstraint(fields=('Group', 'PartnerSet'), name='s_group_partner_set_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgrouppartnerreminder',
            constraint=models.UniqueConstraint(fields=('Group', 'PartnerReminder'), name='s_group_partner_reminder_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgrouppartnerlocation',
            constraint=models.UniqueConstraint(fields=('Group', 'PartnerLocation'), name='s_group_partner_location_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgrouppartnercontact',
            constraint=models.UniqueConstraint(fields=('Group', 'Contact'), name='s_group_partner_contact_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgroupmotivation',
            constraint=models.UniqueConstraint(fields=('Group', 'MotivationDetail'), name='s_group_motivation_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgroupmoduleaccesspermission',
            constraint=models.UniqueConstraint(fields=('Group', 'Module'), name='s_group_module_acc_perm_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgrouplocation',
            constraint=models.UniqueConstraint(fields=('Group', 'Location'), name='s_group_location_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgroupledger',
            constraint=models.UniqueConstraint(fields=('Group', 'Ledger'), name='s_group_ledger_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgroupgift',
            constraint=models.UniqueConstraint(fields=('Group', 'Gift'), name='s_group_gift_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgroupfunction',
            constraint=models.UniqueConstraint(fields=('Group', 'Function'), name='s_group_function_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgroupfileinfo',
            constraint=models.UniqueConstraint(fields=('Group', 'FileInfo'), name='s_group_file_info_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgroupextract',
            constraint=models.UniqueConstraint(fields=('Group', 'Extract'), name='s_group_extract_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgroupdatalabel',
            constraint=models.UniqueConstraint(fields=('Group', 'DataLabel'), name='s_group_data_label_pk'),
        ),
        migrations.AddConstraint(
            model_name='sgroupcostcentre',
            constraint=models.UniqueConstraint(fields=('Group', 'CostCentre'), name='s_group_cost_centre_pk'),
        ),
        migrations.AddConstraint(
            model_name='sfunctionrelationship',
            constraint=models.UniqueConstraint(fields=('Function1', 'Function2'), name='s_function_relationship_pk'),
        ),
        migrations.AddConstraint(
            model_name='serrorlog',
            constraint=models.UniqueConstraint(fields=('ErrorCode', 'User', 'Date', 'Time'), name='s_error_log_pk'),
        ),
        migrations.AddConstraint(
            model_name='sdefaultfilevolume',
            constraint=models.UniqueConstraint(fields=('Group', 'Area'), name='s_default_file_volume_pk'),
        ),
        migrations.AddConstraint(
            model_name='pvenue',
            constraint=models.UniqueConstraint(fields=('Code',), name='p_venue_uk'),
        ),
        migrations.AddConstraint(
            model_name='ptposition',
            constraint=models.UniqueConstraint(fields=('Name', 'PositionScope'), name='pt_position_pk'),
        ),
        migrations.AddConstraint(
            model_name='ptax',
            constraint=models.UniqueConstraint(fields=('Partner', 'TaxType', 'TaxRef'), name='p_tax_pk'),
        ),
        migrations.AddConstraint(
            model_name='psubscription',
            constraint=models.UniqueConstraint(fields=('Publication', 'Partner'), name='p_subscription_pk'),
        ),
        migrations.AddConstraint(
            model_name='pstate',
            constraint=models.UniqueConstraint(fields=('Process', 'Code'), name='p_state_pk'),
        ),
        migrations.AddConstraint(
            model_name='precentpartners',
            constraint=models.UniqueConstraint(fields=('User', 'Partner'), name='p_recent_partners_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppublicationcost',
            constraint=models.UniqueConstraint(fields=('Publication', 'DateEffective'), name='p_publication_cost_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppostcoderegionrange',
            constraint=models.UniqueConstraint(fields=('Region', 'Range'), name='p_postcode_region_range_pk'),
        ),
        migrations.AddConstraint(
            model_name='pperson',
            constraint=models.UniqueConstraint(fields=('Family', 'FamilyId'), name='p_person_uq'),
        ),
        migrations.AddConstraint(
            model_name='ppartnertype',
            constraint=models.UniqueConstraint(fields=('Partner', 'Type'), name='p_partner_type_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnertaxdeductiblepct',
            constraint=models.UniqueConstraint(fields=('Partner', 'DateValidFrom'), name='p_partner_tax_deductible_pct_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnerstate',
            constraint=models.UniqueConstraint(fields=('Partner', 'StateIndex'), name='p_partner_state_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnershortcode',
            constraint=models.UniqueConstraint(fields=('Partner', 'C'), name='p_partner_short_code_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnersetpartner',
            constraint=models.UniqueConstraint(fields=('PartnerSet', 'Partner'), name='p_partner_set_partner_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnerset',
            constraint=models.UniqueConstraint(fields=('PartnerSetId', 'Unit'), name='p_partner_set_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnerreminder',
            constraint=models.UniqueConstraint(fields=('Partner', 'Contact', 'ReminderId'), name='p_partner_reminder_uk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnerrelationship',
            constraint=models.UniqueConstraint(fields=('Partner', 'Relation', 'RelatedPartner'), name='p_partner_relationship_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnermembershippaid',
            constraint=models.UniqueConstraint(fields=('Membership', 'Partner', 'DatePayment'), name='p_partner_membership_paid_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnermembership',
            constraint=models.UniqueConstraint(fields=('Membership', 'Partner', 'StartDate'), name='p_partner_membership_uk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnerlocation',
            constraint=models.UniqueConstraint(fields=('Partner', 'Location'), name='p_partner_location_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnerinterest',
            constraint=models.UniqueConstraint(fields=('Partner', 'InterestNumber'), name='p_partner_interest_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnercontactattribute',
            constraint=models.UniqueConstraint(fields=('Contact', 'ContactAttributeDetail'), name='p_partner_contact_attribute_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnercontact',
            constraint=models.UniqueConstraint(fields=('Partner', 'ContactLog'), name='p_partner_contact_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnercomment',
            constraint=models.UniqueConstraint(fields=('Partner', 'Index', 'Sequence'), name='p_partner_comment_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnerbankingdetails',
            constraint=models.UniqueConstraint(fields=('Partner', 'BankingDetails'), name='p_partner_banking_link_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartnerattribute',
            constraint=models.UniqueConstraint(fields=('Partner', 'AttributeType', 'Sequence'), name='p_partner_attribute_pk'),
        ),
        migrations.AddConstraint(
            model_name='ppartneraction',
            constraint=models.UniqueConstraint(fields=('PartnerReminder', 'ActionNumber'), name='p_partner_action_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmyearprogramapplication',
            constraint=models.UniqueConstraint(fields=('GeneralApplication',), name='pm_year_program_application_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmstaffdata',
            constraint=models.UniqueConstraint(fields=('SiteKey', 'Key'), name='pm_staff_data_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmshorttermapplication',
            constraint=models.UniqueConstraint(fields=('GeneralApplication',), name='pm_short_term_application_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmshorttermapplication',
            constraint=models.UniqueConstraint(fields=('GeneralApplication', 'StAppDate', 'StApplicationType', 'StBasicOutreachId'), name='pm_short_term_application_nk'),
        ),
        migrations.AddConstraint(
            model_name='pmpersonqualification',
            constraint=models.UniqueConstraint(fields=('Partner', 'QualificationArea'), name='pm_person_qualification_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmpersonlanguage',
            constraint=models.UniqueConstraint(fields=('Partner', 'Language'), name='pm_person_language_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmpersonevaluation',
            constraint=models.UniqueConstraint(fields=('Partner', 'EvaluationDate', 'Evaluator'), name='pm_person_evaluation_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmpersoncommitmentstatus',
            constraint=models.UniqueConstraint(fields=('Partner', 'Status', 'StatusSince'), name='pm_person_commitment_status_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmpersonability',
            constraint=models.UniqueConstraint(fields=('Partner', 'AbilityArea'), name='pm_person_ability_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmpastexperience',
            constraint=models.UniqueConstraint(fields=('SiteKey', 'Key'), name='pm_past_experience_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmpastexperience',
            constraint=models.UniqueConstraint(fields=('Partner', 'EndDate', 'StartDate', 'PrevLocation'), name='pm_past_experience_uk'),
        ),
        migrations.AddConstraint(
            model_name='pmpassportdetails',
            constraint=models.UniqueConstraint(fields=('Partner', 'PassportNumber'), name='pm_passport_details_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmjobassignment',
            constraint=models.UniqueConstraint(fields=('Partner', 'Job', 'JobAssignmentKey'), name='pm_job_assignment_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmgeneralapplication',
            constraint=models.UniqueConstraint(fields=('Partner', 'ApplicationKey', 'RegistrationOffice'), name='pm_general_application_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmgeneralapplication',
            constraint=models.UniqueConstraint(fields=('Partner', 'GenAppDate', 'AppType', 'OldLink'), name='pm_general_application_nk'),
        ),
        migrations.AddConstraint(
            model_name='pmergefield',
            constraint=models.UniqueConstraint(fields=('MergeForm', 'Name'), name='p_merge_field_pk'),
        ),
        migrations.AddConstraint(
            model_name='pmdocument',
            constraint=models.UniqueConstraint(fields=('SiteKey', 'Key'), name='pm_document_pk'),
        ),
        migrations.AddConstraint(
            model_name='plocation',
            constraint=models.UniqueConstraint(fields=('SiteKey', 'LocationKey'), name='p_location_pk'),
        ),
        migrations.AddConstraint(
            model_name='phroombooking',
            constraint=models.UniqueConstraint(fields=('Booking', 'RoomAlloc'), name='ph_room_booking_pk'),
        ),
        migrations.AddConstraint(
            model_name='pfoundationproposaldetail',
            constraint=models.UniqueConstraint(fields=('FoundationProposal', 'ProposalDetailId'), name='p_proposal_detail_pk'),
        ),
        migrations.AddConstraint(
            model_name='pfoundationproposal',
            constraint=models.UniqueConstraint(fields=('FoundationPartner', 'FoundationProposalKey'), name='p_proposal_pk'),
        ),
        migrations.AddConstraint(
            model_name='pfoundationdeadline',
            constraint=models.UniqueConstraint(fields=('FoundationPartner', 'FoundationDeadlineKey'), name='p_deadline_pk'),
        ),
        migrations.AddConstraint(
            model_name='pformality',
            constraint=models.UniqueConstraint(fields=('Language', 'Country', 'AddresseeType', 'FormalityLevel'), name='p_formality_pk'),
        ),
        migrations.AddConstraint(
            model_name='pform',
            constraint=models.UniqueConstraint(fields=('Code', 'Name', 'FormLanguage'), name='p_form_pk'),
        ),
        migrations.AddConstraint(
            model_name='pdatalabelvaluepartner',
            constraint=models.UniqueConstraint(fields=('Partner', 'DataLabel'), name='p_data_label_value_partner_pk'),
        ),
        migrations.AddConstraint(
            model_name='pdatalabelvalueapplication',
            constraint=models.UniqueConstraint(fields=('GeneralApplication', 'DataLabel'), name='p_data_label_value_application_pk'),
        ),
        migrations.AddConstraint(
            model_name='pdatalabeluse',
            constraint=models.UniqueConstraint(fields=('DataLabel', 'Use'), name='p_data_label_use_pk'),
        ),
        migrations.AddConstraint(
            model_name='pdatalabellookup',
            constraint=models.UniqueConstraint(fields=('Category', 'ValueCode'), name='p_data_label_lookup_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcustomisedgreeting',
            constraint=models.UniqueConstraint(fields=('Partner', 'User'), name='p_customised_greeting_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcsupplement',
            constraint=models.UniqueConstraint(fields=('Conference', 'OutreachType'), name='pc_supplement_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcroomattribute',
            constraint=models.UniqueConstraint(fields=('Room', 'RoomAttrType'), name='pc_room_attribute_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcroom',
            constraint=models.UniqueConstraint(fields=('Building', 'RoomNumber'), name='pc_room_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcontactattributedetail',
            constraint=models.UniqueConstraint(fields=('ContactAttribute', 'ContactAttrDetailCode'), name='p_contact_attribute_detail_pk'),
        ),
        migrations.AddConstraint(
            model_name='pconsenthistorypermission',
            constraint=models.UniqueConstraint(fields=('ConsentHistoryEntry', 'Purpose'), name='p_consent_history_permission_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcgroup',
            constraint=models.UniqueConstraint(fields=('Attendee', 'GroupType', 'Name'), name='pc_group_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcextracost',
            constraint=models.UniqueConstraint(fields=('Attendee', 'ExtraCostKey'), name='pc_extra_cost_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcearlylate',
            constraint=models.UniqueConstraint(fields=('Conference', 'Applicable'), name='pc_early_late_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcdiscount',
            constraint=models.UniqueConstraint(fields=('Conference', 'DiscountCriteria', 'CostType', 'Validity', 'UpToAge'), name='pc_discount_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcconferencevenue',
            constraint=models.UniqueConstraint(fields=('Conference', 'Venue'), name='pc_conference_venue_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcconferenceoption',
            constraint=models.UniqueConstraint(fields=('Conference', 'OptionType'), name='pc_conference_option_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcconferencecost',
            constraint=models.UniqueConstraint(fields=('Conference', 'OptionDays'), name='pc_conference_cost_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcbuilding',
            constraint=models.UniqueConstraint(fields=('Venue', 'Code'), name='pc_building_pk'),
        ),
        migrations.AddConstraint(
            model_name='pcattendee',
            constraint=models.UniqueConstraint(fields=('Conference', 'Partner'), name='pc_attendee_pk'),
        ),
        migrations.AddConstraint(
            model_name='pbankingdetailsusage',
            constraint=models.UniqueConstraint(fields=('PartnerBankingDetails', 'Type'), name='p_banking_details_usage_pk'),
        ),
        migrations.AddConstraint(
            model_name='paddressline',
            constraint=models.UniqueConstraint(fields=('Code', 'AddressElementPosition'), name='p_address_line_pk'),
        ),
        migrations.AddConstraint(
            model_name='paddresslayout',
            constraint=models.UniqueConstraint(fields=('Country', 'AddressLayout', 'AddressLineNumber', 'AddressLineCode'), name='p_address_layout_pk'),
        ),
        migrations.AddConstraint(
            model_name='paddresseetitleoverride',
            constraint=models.UniqueConstraint(fields=('Language', 'Title'), name='p_addressee_title_override_pk'),
        ),
        migrations.AddConstraint(
            model_name='paddressblock',
            constraint=models.UniqueConstraint(fields=('Country', 'AddressLayout'), name='p_address_block_pk'),
        ),
        migrations.AddConstraint(
            model_name='paction',
            constraint=models.UniqueConstraint(fields=('Process', 'Code'), name='p_action_pk'),
        ),
        migrations.AddConstraint(
            model_name='mextractparameter',
            constraint=models.UniqueConstraint(fields=('Extract', 'ParameterCode', 'ValueIndex'), name='m_extract_parameter_pk'),
        ),
        migrations.AddConstraint(
            model_name='mextractmaster',
            constraint=models.UniqueConstraint(fields=('ExtractName',), name='m_extract_master_uk'),
        ),
        migrations.AddConstraint(
            model_name='mextract',
            constraint=models.UniqueConstraint(fields=('Extract', 'Partner', 'Location'), name='m_extract_pk'),
        ),
        migrations.AddConstraint(
            model_name='avalidledgernumber',
            constraint=models.UniqueConstraint(fields=('Ledger', 'Partner'), name='a_valid_ledger_number_pk'),
        ),
        migrations.AddConstraint(
            model_name='atransanalattrib',
            constraint=models.UniqueConstraint(fields=('Transaction', 'FreeformAnalysis'), name='a_trans_anal_attrib_pk'),
        ),
        migrations.AddConstraint(
            model_name='atransactiontype',
            constraint=models.UniqueConstraint(fields=('Ledger', 'SubSystem', 'Code'), name='a_transaction_type_pk'),
        ),
        migrations.AddConstraint(
            model_name='atransaction',
            constraint=models.UniqueConstraint(fields=('Journal', 'TransactionNumber'), name='a_transaction_pk'),
        ),
        migrations.AddConstraint(
            model_name='ataxtable',
            constraint=models.UniqueConstraint(fields=('Ledger', 'TaxType', 'TaxRateCode', 'TaxValidFrom'), name='a_tax_table_pk'),
        ),
        migrations.AddConstraint(
            model_name='asysteminterface',
            constraint=models.UniqueConstraint(fields=('Ledger', 'SubSystem'), name='a_system_interface_pk'),
        ),
        migrations.AddConstraint(
            model_name='asuspenseaccount',
            constraint=models.UniqueConstraint(fields=('Account',), name='a_suspense_account_pk'),
        ),
        migrations.AddConstraint(
            model_name='aspecialtranstype',
            constraint=models.UniqueConstraint(fields=('SubSystem', 'TransactionTypeCode'), name='a_special_trans_type_pk'),
        ),
        migrations.AddConstraint(
            model_name='arevaluation',
            constraint=models.UniqueConstraint(fields=('Batch', 'JournalNumber'), name='a_revaluation_pk'),
        ),
        migrations.AddConstraint(
            model_name='arecurringtransanalattrib',
            constraint=models.UniqueConstraint(fields=('RecurringTransaction', 'FreeformAnalysis'), name='a_recurring_trans_anal_attr_pk'),
        ),
        migrations.AddConstraint(
            model_name='arecurringtransaction',
            constraint=models.UniqueConstraint(fields=('RecurringJournal', 'TransactionNumber'), name='a_recurring_transaction_pk'),
        ),
        migrations.AddConstraint(
            model_name='arecurringjournal',
            constraint=models.UniqueConstraint(fields=('RecurringBatch', 'JournalNumber'), name='a_recurring_journal_pk'),
        ),
        migrations.AddConstraint(
            model_name='arecurringgiftdetail',
            constraint=models.UniqueConstraint(fields=('RecurringGift', 'DetailNumber'), name='a_recurring_gift_detail_pk'),
        ),
        migrations.AddConstraint(
            model_name='arecurringgiftbatch',
            constraint=models.UniqueConstraint(fields=('Ledger', 'BatchNumber'), name='a_recurring_gift_batch_pk'),
        ),
        migrations.AddConstraint(
            model_name='arecurringgift',
            constraint=models.UniqueConstraint(fields=('RecurringGiftBatch', 'GiftTransactionNumber'), name='a_recurring_gift_pk'),
        ),
        migrations.AddConstraint(
            model_name='arecurringbatch',
            constraint=models.UniqueConstraint(fields=('Ledger', 'BatchNumber'), name='a_recurring_batch_pk'),
        ),
        migrations.AddConstraint(
            model_name='aprocessedfee',
            constraint=models.UniqueConstraint(fields=('GiftDetail', 'FeeCode'), name='a_processed_fee_pk'),
        ),
        migrations.AddConstraint(
            model_name='amotivationgroup',
            constraint=models.UniqueConstraint(fields=('Ledger', 'Code'), name='a_motivation_group_pk'),
        ),
        migrations.AddConstraint(
            model_name='amotivationdetailfee',
            constraint=models.UniqueConstraint(fields=('MotivationDetail', 'FeeCode'), name='a_motivation_detail_fee_pk'),
        ),
        migrations.AddConstraint(
            model_name='amotivationdetail',
            constraint=models.UniqueConstraint(fields=('MotivationGroup', 'Code'), name='a_motivation_detail_pk'),
        ),
        migrations.AddConstraint(
            model_name='aledgerinitflag',
            constraint=models.UniqueConstraint(fields=('Ledger', 'InitOptionName'), name='a_ledger_init_flag_pk'),
        ),
        migrations.AddConstraint(
            model_name='ajournal',
            constraint=models.UniqueConstraint(fields=('Batch', 'JournalNumber'), name='a_journal_pk'),
        ),
        migrations.AddConstraint(
            model_name='aichstewardship',
            constraint=models.UniqueConstraint(fields=('AccountingPeriod', 'IchNumber', 'CostCentre'), name='a_ich_stewardship_pk'),
        ),
        migrations.AddConstraint(
            model_name='agiftdetail',
            constraint=models.UniqueConstraint(fields=('Gift', 'DetailNumber'), name='a_gift_detail_pk'),
        ),
        migrations.AddConstraint(
            model_name='agiftbatch',
            constraint=models.UniqueConstraint(fields=('Ledger', 'BatchNumber'), name='a_gift_batch_pk'),
        ),
        migrations.AddConstraint(
            model_name='agift',
            constraint=models.UniqueConstraint(fields=('GiftBatch', 'GiftTransactionNumber'), name='a_gift_pk'),
        ),
        migrations.AddConstraint(
            model_name='ageneralledgermasterperiod',
            constraint=models.UniqueConstraint(fields=('GlmSequence', 'PeriodNumber'), name='a_glm_period_pk'),
        ),
        migrations.AddConstraint(
            model_name='ageneralledgermaster',
            constraint=models.UniqueConstraint(fields=('Ledger', 'Year', 'Account', 'CostCentre'), name='a_general_ledger_master_uc1'),
        ),
        migrations.AddConstraint(
            model_name='afreeformanalysis',
            constraint=models.UniqueConstraint(fields=('AnalysisType', 'AnalysisValue'), name='a_freeform_analysis_pk'),
        ),
        migrations.AddConstraint(
            model_name='aformelement',
            constraint=models.UniqueConstraint(fields=('Form', 'FormSequence'), name='a_form_element_pk'),
        ),
        migrations.AddConstraint(
            model_name='afeesreceivable',
            constraint=models.UniqueConstraint(fields=('Ledger', 'FeeCode'), name='a_fees_receivable_pk'),
        ),
        migrations.AddConstraint(
            model_name='afeespayable',
            constraint=models.UniqueConstraint(fields=('Ledger', 'FeeCode'), name='a_fees_payable_pk'),
        ),
        migrations.AddConstraint(
            model_name='aeptransaction',
            constraint=models.UniqueConstraint(fields=('Statement', 'Order', 'DetailKey'), name='a_ep_transaction_pk'),
        ),
        migrations.AddConstraint(
            model_name='aeppayment',
            constraint=models.UniqueConstraint(fields=('Ledger', 'PaymentNumber'), name='a_ep_payment_pk'),
        ),
        migrations.AddConstraint(
            model_name='aepmatch',
            constraint=models.UniqueConstraint(fields=('MatchText', 'Detail', 'Ledger'), name='a_ep_match_uk'),
        ),
        migrations.AddConstraint(
            model_name='aemaildestination',
            constraint=models.UniqueConstraint(fields=('FileCode', 'ConditionalValue', 'Partner'), name='a_email_destination_pk'),
        ),
        migrations.AddConstraint(
            model_name='adailyexchangerate',
            constraint=models.UniqueConstraint(fields=('FromCurrency', 'ToCurrency', 'DateEffectiveFrom', 'TimeEffectiveFrom'), name='a_daily_exchange_rate_pk'),
        ),
        migrations.AddConstraint(
            model_name='acurrencylanguage',
            constraint=models.UniqueConstraint(fields=('Currency', 'Language'), name='a_currency_language_pk'),
        ),
        migrations.AddConstraint(
            model_name='acrdtnoteinvoicelink',
            constraint=models.UniqueConstraint(fields=('CreditNoteDocument', 'InvoiceDocument'), name='a_crdt_note_invoice_link_pk'),
        ),
        migrations.AddConstraint(
            model_name='acostcentretype',
            constraint=models.UniqueConstraint(fields=('Ledger', 'CostCentreType'), name='a_cost_centre_type_pk'),
        ),
        migrations.AddConstraint(
            model_name='acostcentre',
            constraint=models.UniqueConstraint(fields=('Ledger', 'Code'), name='a_cost_centre_pk'),
        ),
        migrations.AddConstraint(
            model_name='acorporateexchangerate',
            constraint=models.UniqueConstraint(fields=('FromCurrency', 'ToCurrency', 'DateEffectiveFrom'), name='a_corporate_exchange_rate_pk'),
        ),
        migrations.AddConstraint(
            model_name='abudgetrevision',
            constraint=models.UniqueConstraint(fields=('Ledger', 'Year', 'Revision'), name='a_budget_revision_pk'),
        ),
        migrations.AddConstraint(
            model_name='abudgetperiod',
            constraint=models.UniqueConstraint(fields=('BudgetSequence', 'PeriodNumber'), name='a_budget_period_pk'),
        ),
        migrations.AddConstraint(
            model_name='abudget',
            constraint=models.UniqueConstraint(fields=('BudgetRevision', 'CostCentre', 'Account'), name='a_budget_uc1'),
        ),
        migrations.AddConstraint(
            model_name='abatch',
            constraint=models.UniqueConstraint(fields=('Ledger', 'BatchNumber'), name='a_batch_pk'),
        ),
        migrations.AddConstraint(
            model_name='aarinvoicediscount',
            constraint=models.UniqueConstraint(fields=('ArInvoice', 'ArDiscount'), name='a_ar_invoice_discount_pk'),
        ),
        migrations.AddConstraint(
            model_name='aarinvoicedetaildiscount',
            constraint=models.UniqueConstraint(fields=('ArInvoiceDetail', 'ArDiscount'), name='a_ar_invoice_detail_discount_pk'),
        ),
        migrations.AddConstraint(
            model_name='aarinvoicedetail',
            constraint=models.UniqueConstraint(fields=('ArInvoice', 'DetailNumber'), name='a_ar_invoice_detail_pk'),
        ),
        migrations.AddConstraint(
            model_name='aarinvoice',
            constraint=models.UniqueConstraint(fields=('Ledger', 'Key'), name='a_ar_invoice_pk'),
        ),
        migrations.AddConstraint(
            model_name='aardiscountpercategory',
            constraint=models.UniqueConstraint(fields=('ArCategory', 'ArDiscount'), name='ar_discount_per_category_pk'),
        ),
        migrations.AddConstraint(
            model_name='aardiscount',
            constraint=models.UniqueConstraint(fields=('Code', 'ArDateValidFrom'), name='ar_discount_pk'),
        ),
        migrations.AddConstraint(
            model_name='aardefaultdiscount',
            constraint=models.UniqueConstraint(fields=('ArCategory', 'ArDiscount'), name='ar_default_discount_pk'),
        ),
        migrations.AddConstraint(
            model_name='aararticleprice',
            constraint=models.UniqueConstraint(fields=('ArArticle', 'ArDateValidFrom'), name='ar_article_price_pk'),
        ),
        migrations.AddConstraint(
            model_name='aappayment',
            constraint=models.UniqueConstraint(fields=('Ledger', 'PaymentNumber'), name='a_ap_payment_pk'),
        ),
        migrations.AddConstraint(
            model_name='aapdocumentpayment',
            constraint=models.UniqueConstraint(fields=('ApDocument', 'ApPayment'), name='a_ap_document_payment_pk'),
        ),
        migrations.AddConstraint(
            model_name='aapdocumentdetail',
            constraint=models.UniqueConstraint(fields=('ApDocument', 'DetailNumber'), name='a_ap_document_detail_pk'),
        ),
        migrations.AddConstraint(
            model_name='aapdocument',
            constraint=models.UniqueConstraint(fields=('Ledger', 'ApNumber'), name='a_ap_document_pk'),
        ),
        migrations.AddConstraint(
            model_name='aapanalattrib',
            constraint=models.UniqueConstraint(fields=('ApDocumentDetail', 'FreeformAnalysis'), name='a_ap_anal_attrib_pk'),
        ),
        migrations.AddConstraint(
            model_name='aanalysistype',
            constraint=models.UniqueConstraint(fields=('Ledger', 'Code'), name='a_analysis_type_pk'),
        ),
        migrations.AddConstraint(
            model_name='aanalysisattribute',
            constraint=models.UniqueConstraint(fields=('AnalysisType', 'Account'), name='a_analysis_attribute_pk'),
        ),
        migrations.AddConstraint(
            model_name='aaccountproperty',
            constraint=models.UniqueConstraint(fields=('Account', 'Property', 'PropertyValue'), name='a_account_property_pk'),
        ),
        migrations.AddConstraint(
            model_name='aaccountingperiod',
            constraint=models.UniqueConstraint(fields=('Ledger', 'AccountingPeriodNumber'), name='a_accounting_period_pk'),
        ),
        migrations.AddConstraint(
            model_name='aaccounthierarchydetail',
            constraint=models.UniqueConstraint(fields=('AccountHierarchy', 'ReportingAccount'), name='a_account_hierarchy_detail_pk'),
        ),
        migrations.AddConstraint(
            model_name='aaccounthierarchy',
            constraint=models.UniqueConstraint(fields=('Ledger', 'Code'), name='a_account_hierarchy_pk'),
        ),
        migrations.AddConstraint(
            model_name='aaccount',
            constraint=models.UniqueConstraint(fields=('Ledger', 'Code'), name='a_account_pk'),
        ),
    ]
